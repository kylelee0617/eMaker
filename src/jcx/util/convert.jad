// Decompiled by DJ v3.7.7.81 Copyright 2004 Atanas Neshkov  Date: 2008/9/5 ¤U¤È 04:26:59
// Home Page : http://members.fortunecity.com/neshkov/dj.html  - Check often for new version!
// Decompiler options: packimports(3) 
// Source File Name:   convert.java

package jcx.util;

import java.io.*;
import java.math.BigDecimal;
import java.util.*;

// Referenced classes of package jcx.util:
//            datetime, check

public class convert
{

    public static String ToNumeric(String s, String s1)
    {
        if(s.length() == 0)
            return s;
        if(s1.indexOf(".") == -1)
            return s;
        String as[] = separStr(s1, ".");
        int i;
        try
        {
            i = s.length() - Integer.parseInt(as[1]);
        }
        catch(Exception _ex)
        {
            return s;
        }
        String s2 = s.substring(0, i) + "." + s.substring(i);
        if(s2.indexOf(".") == 0)
            s2 = "0" + s2;
        else
        if(s2.indexOf("+") == 0 && s2.indexOf(".") == 1)
            s2 = "+0." + s2.substring(2);
        else
        if(s2.indexOf("-") == 0 && s2.indexOf(".") == 1)
            s2 = "-0." + s2.substring(2);
        return s2;
    }

    public static int ToInt(String s)
    {
        return Integer.parseInt(s);
    }

    public static String FormatedDate(String s, String s1)
    {
        s = s.trim();
        String s2 = "0";
        String s3 = "";
        String s13 = "";
        String s18 = "";
        if(s.length() < 5)
            return s;
        if(s.length() > 8)
            return s2;
        String s20 = datetime.getYear(s);
        if(s20.equals("0"))
            return s2;
        String s21 = datetime.getMonth(s);
        if(s21.equals("0"))
            return s2;
        String s22 = datetime.getDate(s);
        if(s22.equals("0"))
            return s2;
        String s23 = "";
        if(s1.equals("/"))
            s23 = s20 + "/" + s21 + "/" + s22;
        else
        if(s1.equals("\u5E74\u6708\u65E5"))
            s23 = s20 + "\u5E74" + s21 + "\u6708" + s22 + "\u65E5";
        else
        if(s1.equals("\u6C11\u570B\u5E74\u6708\u65E5"))
        {
            if(s20.length() == 4)
                s20 = "" + (Integer.parseInt(s20) - 1911);
            if(s20.length() == 1)
                s20 = changDate(s20);
            else
            if(s20.length() == 2 && s20.substring(0, 1).equals("0"))
            {
                String s4 = s20.substring(1, 2);
                s20 = changDate(s4);
            } else
            if(s20.length() == 2 && !s20.substring(0, 1).equals("0"))
            {
                String s5 = s20.substring(0, 1);
                if(s5.equals("1"))
                    s5 = "";
                else
                    s5 = changDate(s5);
                String s14 = s20.substring(1, 2);
                s14 = changDate(s14);
                s20 = s5 + "\u5341" + s14;
            } else
            if(s20.length() == 3 && !s20.substring(1, 2).equals("\u5341"))
            {
                String s6 = s20.substring(0, 1);
                s6 = changDate(s6);
                String s15 = s20.substring(1, 2);
                s15 = changDate(s15);
                String s19 = s20.substring(2, 3);
                s19 = changDate(s19);
                s20 = s6 + "\u767E" + s15 + "\u5341" + s19;
            }
            if(s21.length() == 1)
            {
                String s7 = s21.substring(0, 1);
                s7 = changDate(s7);
                s21 = s7;
            } else
            if(s21.length() == 2 && s21.substring(0, 1).equals("0"))
            {
                String s8 = s21.substring(1, 2);
                s8 = changDate(s8);
                s21 = s8;
            } else
            if(s21.length() == 2 && !s21.substring(0, 1).equals("0"))
            {
                String s9 = s21.substring(0, 1);
                if(s9.equals("1"))
                    s9 = "";
                else
                    s9 = changDate(s9);
                String s16 = s21.substring(1, 2);
                s16 = changDate(s16);
                s21 = s9 + "\u5341" + s16;
            }
            if(s22.length() == 1)
            {
                String s10 = s22.substring(0, 1);
                s10 = changDate(s10);
                s22 = s10;
            } else
            if(s22.length() == 2 && s22.substring(0, 1).equals("0"))
            {
                String s11 = s22.substring(1, 2);
                s11 = changDate(s11);
                s22 = s11;
            } else
            if(s22.length() == 2 && !s22.substring(0, 1).equals("0"))
            {
                String s12 = s22.substring(0, 1);
                if(s12.equals("1"))
                    s12 = "";
                else
                    s12 = changDate(s12);
                String s17 = s22.substring(1, 2);
                s17 = changDate(s17);
                s22 = s12 + "\u5341" + s17;
            }
            s23 = s20 + "\u5E74" + s21 + "\u6708" + s22 + "\u65E5";
        } else
        {
            s23 = s2;
        }
        return s23;
    }

    public static String Ltrim(String s)
    {
        if(s.trim().length() == 0)
            return "";
        if(s.indexOf(" ") == -1)
            return s;
        int i = s.length();
        int j;
        for(j = 0; j < i; j++)
            if(s.charAt(j) != ' ')
                break;

        return s.substring(j);
    }

    public static String NumToEngnum(String s)
    {
        String as[] = {
            "BILLION", "MILLION", "THOUSAND"
        };
        s = replace(s.trim(), ",", "");
        if(s.length() == 0)
            return s;
        String as1[] = separStr(s, ".");
        if(as1.length > 2)
            return "error";
        for(int i = 0; i < as1.length; i++)
        {
            if(as1[i].length() > (as.length + 1) * 3)
                return "error";
            if(!check.isNum(as1[i]))
                return "error";
            as1[i] = add0(as1[i], "" + (as.length + 1) * 3);
        }

        String s1 = "";
        for(int j = 0; j < as1.length; j++)
        {
            if(j == 1)
                s1 += " AND CENT";
            if(Long.parseLong(as1[j].trim()) == 0L)
            {
                s1 += " " + transEnglish(0);
            } else
            {
                for(int k = 0; k < as.length + 1; k++)
                {
                    String s2 = as1[j].trim().substring(k * 3, k * 3 + 3);
                    if(Integer.parseInt(s2) != 0)
                    {
                        int l = Integer.parseInt(s2.substring(0, 1));
                        int i1 = Integer.parseInt(s2.substring(1, 2));
                        int j1 = Integer.parseInt(s2.substring(2, 3));
                        if(l > 0)
                        {
                            s1 += " " + transEnglish(l);
                            s1 += " " + transEnglish(100);
                        }
                        if(i1 > 0)
                        {
                            i1 *= 10;
                            if(i1 == 10)
                            {
                                i1 += j1;
                                j1 = 0;
                            }
                            s1 += " " + transEnglish(i1);
                        }
                        if(j1 > 0)
                            s1 += " " + transEnglish(j1);
                        if(k < as.length)
                            s1 += " " + as[k];
                    }
                }

            }
        }

        return s1;
    }

    private static String serp(String s, int i, int j, int k, int l, int i1, String s1)
    {
        String as[] = {
            "\u842C", "\u5104", "\u5146"
        };
        String as1[] = {
            "", "\u62FE", "\u4F70", "\u4EDF"
        };
        String as2[] = {
            "\u96F6", "\u58F9", "\u8CB3", "\u53C3", "\u8086", "\u4F0D", "\u9678", "\u67D2", "\u634C", "\u7396"
        };
        if(s.substring(0, 1).equals("1") && s.length() - i == 1 && k == 0)
            s1 += as1[s.length() - i];
        else
        if(s.substring(0, 1).equals("0"))
        {
            if(s.length() - i != 0 && l == 0)
            {
                s1 += as2[Integer.parseInt(s.substring(0, 1))];
                l = 1;
            }
            i1++;
        } else
        {
            s1 += as2[Integer.parseInt(s.substring(0, 1))];
            l = 0;
            s1 += as1[s.length() - i];
        }
        if(s.length() == i)
        {
            if(i == 1)
            {
                if(l == 1)
                    s1 = s1.substring(0, s1.length() - 1);
                return s1;
            }
            if(l == 1)
            {
                s1 = s1.substring(0, s1.length() - 1);
                l = 0;
            }
            if(i1 != 4)
                s1 += as[j];
            i1 = 0;
            return serp(s.substring(1, s.length()), i - 4, j - 1, k, l, i1, s1);
        } else
        {
            k = 1;
            return serp(s.substring(1, s.length()), i, j, k, l, i1, s1);
        }
    }

    public static String ByteToStr(String s)
        throws IOException
    {
        String s1 = new String(s.getBytes("8859_1"));
        return s1;
    }

    public static String replace(String s, String s1, String s2)
    {
        int i = 0;
        if(i == -1)
            return s;
        int j = s1.length();
        if(j == 0)
            return s;
        String s3 = "";
        while((i = s.indexOf(s1)) >= 0) 
        {
            s3 += s.substring(0, i) + s2;
            s = s.substring(i + j);
        }
        s3 += s;
        return s3;
    }

    public static String ToHtml(String s)
    {
        StringBuffer stringbuffer = new StringBuffer();
        for(int i = 0; i < s.length(); i++)
        {
            char c = s.charAt(i);
            if(c == '"')
                stringbuffer.append("&quot;");
            else
            if(c == '&')
                stringbuffer.append("&amp;");
            else
            if(c == '<')
                stringbuffer.append("&lt;");
            else
            if(c == '>')
                stringbuffer.append("&gt;");
            else
            if(c == '\'')
                stringbuffer.append("&#039;");
            else
                stringbuffer.append(c);
        }

        return stringbuffer.toString();
    }

    public static String addS0(String s, String s1)
    {
        String s2 = "-1";
        if(s.trim().length() == 0)
            return s2;
        String s3 = "";
        if(s.substring(0, 1).equals("-"))
        {
            s3 = "-";
            s = s.substring(1);
        } else
        if(s.substring(0, 1).equals("+"))
        {
            s3 = "+";
            s = s.substring(1);
        } else
        {
            s3 = "+";
        }
        return s3 + add0(s, s1);
    }

    private static String changDate(String s)
    {
        String s1 = "";
        if(s.equals("0"))
        {
            String s2 = "";
            return s2;
        }
        if(s.equals("1"))
        {
            String s3 = "\u4E00";
            return s3;
        }
        if(s.equals("2"))
        {
            String s4 = "\u4E8C";
            return s4;
        }
        if(s.equals("3"))
        {
            String s5 = "\u4E09";
            return s5;
        }
        if(s.equals("4"))
        {
            String s6 = "\u56DB";
            return s6;
        }
        if(s.equals("5"))
        {
            String s7 = "\u4E94";
            return s7;
        }
        if(s.equals("6"))
        {
            String s8 = "\u516D";
            return s8;
        }
        if(s.equals("7"))
        {
            String s9 = "\u4E03";
            return s9;
        }
        if(s.equals("8"))
        {
            String s10 = "\u516B";
            return s10;
        }
        if(s.equals("9"))
        {
            String s11 = "\u4E5D";
            return s11;
        } else
        {
            return "0";
        }
    }

    public static void main(String args[])
    {
        String s = "%---%";
        String s1 = "\u5408\u8A08%---%H58%---%H58A%--%H58B";
        String args1[] = null;
        args1 = StringToken(s1, s);
        for(int i = 0; i < args1.length; i++)
            System.out.println(s1 + "-------------" + i + "--------------------|" + args1[i]);

    }

    public static String addBR(String s, int i)
    {
        int j = s.length();
        if(j <= i)
            return s;
        String s1 = "";
        String s2 = "";
        for(int k = 0; k < s.length(); k += i)
            if(k + i >= j)
            {
                String s3 = s.substring(k);
                s1 = s1 + s3;
            } else
            {
                String s4 = s.substring(k, k + i);
                s1 = s1 + s4 + "<br>";
            }

        return s1;
    }

    public static String ToLike(String s)
    {
        String s1 = "";
        for(int i = 0; i < s.length() - 1; i++)
        {
            char c = s.charAt(i);
            if(c <= '\200')
                continue;
            i++;
            c = s.charAt(i);
            if(c == '[' || c == ']')
            {
                s1 = "]";
                break;
            }
            if(c != '_' && c != '%')
                continue;
            s1 = "" + c;
            break;
        }

        if(s1.length() == 0)
            return s;
        else
            return s + " escape '" + s1 + "'";
    }

    public static String toGB2312(String s)
    {
        if(HT2 == null)
        {
            Hashtable hashtable = new Hashtable();
            for(int i = 0; i < enc1.length; i++)
                hashtable.put(enc2[i], enc1[i]);

            HT2 = hashtable;
        }
        StringBuffer stringbuffer = new StringBuffer();
        for(int j = 0; j < s.length(); j++)
        {
            String s1 = s.substring(j, j + 1);
            String s2 = (String)HT2.get(s1);
            if(s2 == null)
                stringbuffer.append(s1);
            else
                stringbuffer.append(s2);
        }

        return stringbuffer.toString();
    }

    public static String roc2ac(String s)
    {
        String s1 = "-1";
        if(!check.isNum(s))
            return s1;
        if(s.length() == 5 || s.length() == 6 || s.length() == 7)
            return (Integer.parseInt(s) + 0x1239870) + "";
        if(s.length() == 4)
            return (Integer.parseInt(s) + 0x2ea7c) + "";
        if(s.length() == 2)
            return (Integer.parseInt(s) + 1911) + "";
        else
            return s1;
    }

    public static String addN0Dat(String s, String s1)
    {
        String s2 = "-1";
        if(s1.indexOf(",") == -1)
            return s2;
        if(s.indexOf(".") == -1)
            return s2;
        String as[] = separStr(s1, ",");
        if(as.length != 2)
            return s2;
        for(int i = 0; i < as.length; i++)
            if(!check.isNum(as[i]))
                return s2;

        String as1[] = separStr(s, ".");
        if(as1.length != 2)
            return s2;
        for(int j = 0; j < as1.length; j++)
            if(!check.isNum(as1[j]))
                return s2;

        int k = as1[0].trim().length();
        int l = as1[1].trim().length();
        int i1 = Integer.parseInt(as[0]) - Integer.parseInt(as[1]);
        int j1 = Integer.parseInt(as[1]);
        int k1 = i1 - k;
        int l1 = j1 - l;
        if(k1 < 0)
            return s2;
        if(l1 < 0)
            return s2;
        String s3 = "";
        String s4 = "";
        for(int i2 = 0; i2 < k1; i2++)
            s3 = "0" + s3;

        s3 = s3 + as1[0];
        for(int j2 = 0; j2 < l1; j2++)
            s4 = s4 + "0";

        s4 = as1[1] + s4;
        return s3 + "." + s4;
    }

    public static String addSN0Dat(String s, String s1)
    {
        String s2 = "-1";
        if(s.trim().length() == 0)
            return s2;
        String s3 = "";
        if(s.substring(0, 1).equals("-"))
        {
            s3 = "-";
            s = s.substring(1);
        } else
        if(s.substring(0, 1).equals("+"))
        {
            s3 = "+";
            s = s.substring(1);
        } else
        {
            s3 = "+";
        }
        return s3 + addN0Dat(s, s1);
    }

    public static String NumToTranum(String s)
    {
        int i = 0;
        int j = 0;
        int k = 0;
        String s1 = "";
        if(s.length() <= 16 && s.length() != 0)
        {
            if(s.length() >= 13)
                return serp(s, 13, 2, i, j, k, s1);
            if(s.length() >= 9)
                return serp(s, 9, 1, i, j, k, s1);
            if(s.length() >= 5)
                return serp(s, 5, 0, i, j, k, s1);
            if(s.length() >= 1)
                return serp(s, 1, -1, i, j, k, s1);
        }
        return "param_not_found";
    }

    private static String transEnglish(int i)
    {
        if(i == 0)
            return "ZERO";
        if(i == 1)
            return "ONE";
        if(i == 2)
            return "TWO";
        if(i == 3)
            return "THREE";
        if(i == 4)
            return "FOUR";
        if(i == 5)
            return "FIVE";
        if(i == 6)
            return "SIX";
        if(i == 7)
            return "SEVEN";
        if(i == 8)
            return "EIGHT";
        if(i == 9)
            return "NINE";
        if(i == 10)
            return "TEN";
        if(i == 11)
            return "EVELEN";
        if(i == 12)
            return "TWELVE";
        if(i == 13)
            return "THIRTEEN";
        if(i == 14)
            return "FOURTEEN";
        if(i == 15)
            return "FIFTEEN";
        if(i == 16)
            return "SIXTEEN";
        if(i == 17)
            return "SEVENTEEN";
        if(i == 18)
            return "EIGHTEEN";
        if(i == 19)
            return "NINETEEN";
        if(i == 20)
            return "TWENTY";
        if(i == 30)
            return "THIRTY";
        if(i == 40)
            return "FORTY";
        if(i == 50)
            return "FIFTY";
        if(i == 60)
            return "SIXTY";
        if(i == 70)
            return "SEVENTY";
        if(i == 80)
            return "EIGHTY";
        if(i == 90)
            return "NINETY";
        if(i == 100)
            return "HUNDRED";
        else
            return "";
    }

    public static String charDecode(String s)
    {
        if(s.indexOf("#1#") != -1)
            s = replace(s, "#1#", "%");
        if(s.indexOf("#2#") != -1)
            s = replace(s, "#2#", "+");
        if(s.indexOf("#3#") != -1)
            s = replace(s, "#3#", "&");
        if(s.indexOf("#4#") != -1)
            s = replace(s, "#4#", "=");
        if(s.indexOf("#5#") != -1)
            s = replace(s, "#5#", "'");
        return s;
    }

    public static String FourToFive(String s, int i)
    {
        if(i < 0)
            return s;
        try
        {
            BigDecimal bigdecimal = new BigDecimal(s);
            return "" + bigdecimal.setScale(i, 4);
        }
        catch(NumberFormatException _ex)
        {
            return s;
        }
    }

    public static String ac2roc(String s)
    {
        String s1 = "-1";
        if(!check.isNum(s))
            return s1;
        if(s.length() == 8)
            return (Integer.parseInt(s) - 0x1239870) + "";
        if(s.length() == 6)
            return (Integer.parseInt(s) - 0x2ea7c) + "";
        if(s.length() == 4)
            return (Integer.parseInt(s) - 1911) + "";
        else
            return s1;
    }

    public static String addSpace(String s, int i)
    {
        int j = i - s.length();
        for(int k = 0; k < j; k++)
            s = s + " ";

        return s;
    }

    String space(int i)
    {
        String s = "";
        for(int j = 0; j < i; j++)
            s += " ";

        return s;
    }

    public static String[] StringToken(String s, String s1)
    {
        Vector vector = cutToken(s, s1);
        return (String[])vector.toArray(new String[0]);
    }

    public static int int_substring(int i, int j, int k)
    {
        byte byte0 = -1;
        String s = String.valueOf(i);
        try
        {
            return Integer.parseInt(s.substring(j, k));
        }
        catch(StringIndexOutOfBoundsException _ex)
        {
            return byte0;
        }
        catch(NumberFormatException _ex)
        {
            return byte0;
        }
    }

    public static String StrToByte(String s)
    {
        String s1;
        try
        {
            s1 = new String(s.getBytes(), "8859_1");
        }
        catch(UnsupportedEncodingException _ex)
        {
            return "-1";
        }
        return s1;
    }

    public static String E2O(String s)
    {
        if(jdk15_plus)
            try
            {
                String s1 = "";
                if(s.startsWith("+"))
                {
                    s1 = "+";
                    s = s.substring(1);
                } else
                if(s.startsWith("-"))
                {
                    s1 = "-";
                    s = s.substring(1);
                }
                int i = s.indexOf("E");
                if(i == -1)
                    return s1 + s;
                String s3 = s.substring(0, i);
                char c = s.charAt(i + 1);
                int k = 0;
                if(c == '+' || c == '-')
                {
                    String s4 = s.substring(i + 2);
                    k = Integer.parseInt(s4);
                } else
                {
                    String s5 = s.substring(i + 1);
                    k = Integer.parseInt(s5);
                    c = '+';
                }
                if(s3.indexOf(".") == -1)
                    s3 = s3 + ".0";
                StringBuffer stringbuffer = new StringBuffer();
                for(int l = 0; l < k; l++)
                    stringbuffer.append(" ");

                if(c == '+')
                {
                    stringbuffer.insert(0, s3);
                    int i1 = stringbuffer.indexOf(".");
                    stringbuffer.deleteCharAt(i1);
                    stringbuffer.insert(i1 + k, ".");
                    String s6 = stringbuffer.toString().trim().replace(' ', '0');
                    return s1 + s6;
                }
                stringbuffer.append(s3);
                int j1 = stringbuffer.indexOf(".");
                stringbuffer.deleteCharAt(j1);
                stringbuffer.insert(j1 - k, ".");
                String s7 = stringbuffer.toString().trim().replace(' ', '0');
                if(s7.charAt(0) != '.');
                s7 = "0" + s7;
                for(int k1 = 0; k1 < k; k1++)
                {
                    if(s7.charAt(s7.length() - 1) != '0')
                        break;
                    s7 = s7.substring(0, s7.length() - 1);
                }

                return s1 + s7;
            }
            catch(Exception exception)
            {
                System.err.println("parse decimal " + s + " error !");
                exception.printStackTrace();
                return s;
            }
        String s2 = "" + s;
        if(s2.indexOf("E") == -1)
        {
            return s2;
        } else
        {
            int j = Integer.parseInt(s2.substring(s2.indexOf("E") + 1));
            s2 = s2.substring(0, s2.indexOf("E"));
            BigDecimal bigdecimal = new BigDecimal(s2);
            bigdecimal = bigdecimal.movePointRight(j);
            return bigdecimal.toString();
        }
    }

    public static String E2O(double d)
    {
        if(jdk15_plus)
            return E2O("" + d);
        String s = "" + d;
        if(s.indexOf("E") == -1)
        {
            return s;
        } else
        {
            int i = Integer.parseInt(s.substring(s.indexOf("E") + 1));
            s = s.substring(0, s.indexOf("E"));
            BigDecimal bigdecimal = new BigDecimal(s);
            bigdecimal = bigdecimal.movePointRight(i);
            return bigdecimal.toString();
        }
    }

    public static String addN0(String s, String s1)
    {
        String s2 = "-1";
        if(s1.indexOf(",") == -1)
            return s2;
        String as[] = separStr(s1, ",");
        if(as.length != 2)
            return s2;
        for(int i = 0; i < as.length; i++)
            if(!check.isNum(as[i]))
                return s2;

        if(!check.isNum(s))
            return s2;
        int j = s.trim().length();
        int k = 0;
        int l = Integer.parseInt(as[0]) - Integer.parseInt(as[1]);
        int i1 = Integer.parseInt(as[1]);
        int j1 = l - j;
        int k1 = i1 - k;
        if(j1 < 0)
            return s2;
        String s3 = "";
        String s4 = "";
        for(int l1 = 0; l1 < j1; l1++)
            s3 = "0" + s3;

        s3 = s3 + s;
        for(int i2 = 0; i2 < k1; i2++)
            s4 = s4 + "0";

        return s3 + "." + s4;
    }

    public static String addSN0(String s, String s1)
    {
        String s2 = "-1";
        if(s.trim().length() == 0)
            return s2;
        String s3 = "";
        if(s.substring(0, 1).equals("-"))
        {
            s3 = "-";
            s = s.substring(1);
        } else
        if(s.substring(0, 1).equals("+"))
        {
            s3 = "+";
            s = s.substring(1);
        } else
        {
            s3 = "+";
        }
        return s3 + addN0(s, s1);
    }

    public static String charEncode(String s)
    {
        if(s.indexOf("%") != -1)
            s = replace(s, "%", "#1#");
        if(s.indexOf("+") != -1)
            s = replace(s, "+", "#2#");
        if(s.indexOf("&") != -1)
            s = replace(s, "&", "#3#");
        if(s.indexOf("=") != -1)
            s = replace(s, "=", "#4#");
        if(s.indexOf("'") != -1)
            s = replace(s, "'", "#5#");
        return s;
    }

    public convert()
    {
    }

    static boolean isJdk15_plus()
    {
        String s = System.getProperty("java.version", "1.1");
        return !s.startsWith("1.1") && !s.startsWith("1.2") && !s.startsWith("1.3") && !s.startsWith("1.4");
    }

    String word_format1(String s, String s1, int i)
    {
        s1 = s1.trim();
        int j = s1.length();
        if(j > i)
            return s1;
        if(s.equals("left"))
            s1 += space(i - j);
        else
        if(s.equals("right"))
            s1 = space(i - j) + s1;
        else
        if(s.equals("center"))
        {
            s1 = space((i - j) / 2) + s1 + space((i - j) / 2);
            if((i - j) % 2 != 0)
                s1 = " " + s1;
        }
        return s1;
    }

    public static long HexToDec(String s)
    {
        s = s.toUpperCase();
        Properties properties = new Properties();
        properties.put("A", "10");
        properties.put("B", "11");
        properties.put("C", "12");
        properties.put("D", "13");
        properties.put("E", "14");
        properties.put("F", "15");
        properties.put("1", "1");
        properties.put("2", "2");
        properties.put("3", "3");
        properties.put("4", "4");
        properties.put("5", "5");
        properties.put("6", "6");
        properties.put("7", "7");
        properties.put("8", "8");
        properties.put("9", "9");
        int i = s.length();
        long l = 0L;
        for(int j = 0; j < i; j++)
        {
            String s1 = s.substring(j, j + 1);
            try
            {
                int k = Integer.parseInt(properties.getProperty(s1)) * (int)Math.pow(16D, i - j - 1);
                l += k;
            }
            catch(Exception _ex)
            {
                return -1L;
            }
        }

        return l;
    }

    public static String toBIG5(String s)
    {
        if(HT1 == null)
        {
            Hashtable hashtable = new Hashtable();
            for(int i = 0; i < enc1.length; i++)
                hashtable.put(enc1[i], enc2[i]);

            HT1 = hashtable;
        }
        StringBuffer stringbuffer = new StringBuffer();
        for(int j = 0; j < s.length(); j++)
        {
            String s1 = s.substring(j, j + 1);
            String s2 = (String)HT1.get(s1);
            if(s2 == null)
                stringbuffer.append(s1);
            else
                stringbuffer.append(s2);
        }

        return stringbuffer.toString();
    }

    public static String ToSql(String s)
    {
        int i = -1;
        if(s.trim().length() == 0)
            return s;
        s.trim().substring(0, 1);
        for(; (i = s.indexOf("'", i + 1)) >= 0; i++)
            s = s.substring(0, i) + "'" + s.substring(i);

        return s;
    }

    public static String rtrim(String s)
    {
        if(s.trim().length() == 0)
            return "";
        if(s.indexOf(" ") == -1)
            return s;
        int i = s.length();
        byte byte0 = 32;
        int j = 0;
        for(j = i - 1; j > 0; j--)
        {
            char c = s.charAt(j);
            if(c != ' ')
                break;
        }

        return s.substring(0, j + 1);
    }

    public static String[] separStr(String s, String s1)
    {
        if(s1.length() != 0)
        {
            Vector vector = new Vector();
            int i = 0;
            for(int j = 0; (j = s.indexOf(s1, i)) != -1;)
            {
                vector.addElement(s.substring(i, j));
                i = j + s1.length();
            }

            vector.addElement(s.substring(i));
            String as2[] = new String[vector.size()];
            for(int i1 = 0; i1 < as2.length; i1++)
                as2[i1] = (String)vector.elementAt(i1);

            return as2;
        }
        String as[] = {
            "!-1!"
        };
        String as1[] = new String[0];
        if(s.trim().length() == 0)
            return as1;
        int k = s1.length();
        if(s.indexOf(s1) == -1)
        {
            String as3[] = {
                s
            };
            return as3;
        }
        try
        {
            String s2 = s.substring(s.length() - k);
            if(s2.equals(s1))
                s = s.substring(0, s.length() - k);
            String s3 = s.substring(0, k);
            if(s3.equals(s1))
                s = s.substring(k);
            if(s.indexOf(s1) == -1)
            {
                String as5[] = {
                    s
                };
                return as5;
            }
        }
        catch(IndexOutOfBoundsException _ex)
        {
            return as;
        }
        int l = 0;
        for(int j1 = 0; j1 < s.length(); j1++)
        {
            if(j1 + k > s.length())
                break;
            if(s.substring(j1, j1 + k).equals(s1))
                l++;
        }

        String as4[] = new String[l + 1];
        int k1 = 0;
        try
        {
            for(int l1 = 0; l1 < l; l1++)
            {
                for(int j2 = k1; j2 < s.length(); j2++)
                {
                    if(j2 + k > s.length())
                        break;
                    if(!s.substring(j2, j2 + k).equals(s1))
                        continue;
                    as4[l1] = s.substring(k1, j2);
                    k1 = j2 + k;
                    break;
                }

            }

        }
        catch(IndexOutOfBoundsException _ex)
        {
            return as;
        }
        as4[l] = s.substring(k1);
        int i2 = 0;
        for(int k2 = 0; k2 < as4.length; k2++)
            if(!as4[k2].equals(""))
                i2++;

        if(i2 == as4.length)
            return as4;
        String as6[] = new String[i2];
        int l2 = 0;
        for(int i3 = 0; i3 < as4.length; i3++)
            if(!as4[i3].equals(""))
                as6[l2++] = as4[i3];

        return as6;
    }

    public static String cleanVar(String s, String s1)
    {
        String as[] = separStr(s, s1);
        String s2 = "";
        for(int i = 0; i < as.length; i++)
            s2 = s2 + as[i];

        return s2;
    }

    String word_format(String s, String s1, int i)
    {
        s1 = s1.trim();
        String s2 = StrToByte(s1);
        s2 = word_format1(s, s2, i);
        try
        {
            s1 = ByteToStr(s1);
        }
        catch(Exception _ex)
        {
            return "-1";
        }
        return s1;
    }

    public static String getRegistry(String s, String s1)
    {
        try
        {
            String s2 = "";
            if(s1.length() != 0)
                s2 = " /v " + s1;
            Process process = Runtime.getRuntime().exec("reg query \"" + s + "\"" + s2);
            StringBuffer stringbuffer = new StringBuffer();
            InputStream inputstream = process.getInputStream();
            int i = 0;
            byte abyte0[] = new byte[1024];
            while((i = inputstream.read(abyte0)) != -1) 
                stringbuffer.append(new String(abyte0, 0, i));
            if(process.exitValue() == 0)
            {
                if(s1.length() == 0)
                    return stringbuffer.toString();
                String s3 = stringbuffer.toString();
                int j = s3.indexOf("REG_SZ");
                if(j != -1)
                    return s3.substring(j + "REG_SZ".length()).trim();
                j = s3.indexOf("REG_DWORD");
                if(j != -1)
                {
                    String s4 = s3.substring(j + "REG_DWORD".length()).trim();
                    return Integer.toString(Integer.parseInt(s4.substring("0x".length()), 16) + 1);
                } else
                {
                    return null;
                }
            } else
            {
                return null;
            }
        }
        catch(Exception exception)
        {
            System.err.println(exception);
        }
        return null;
    }

    public static Vector cutToken(String s, String s1)
    {
        int i = 0;
        int j = 0;
        String s2 = s1;
        Vector vector = new Vector();
        while((j = s.indexOf(s2, i)) != -1) 
        {
            vector.addElement(s.substring(i, j));
            i = j + s2.length();
        }
        vector.addElement(s.substring(i));
        return vector;
    }

    public static String add0(String s, String s1)
    {
        String s2 = s1;
        String s3 = "-1";
        if(!check.isNum(s2))
            return s3;
        int i = Integer.parseInt(s2);
        int j = i - s.length();
        for(int k = 0; k < j; k++)
            s = "0" + s;

        return s;
    }

    public static String FormatedTime(String s, String s1)
    {
        String s2 = "0";
        int i = s.length();
        if(i > 6)
            return s2;
        if(i < 6)
        {
            for(int j = 0; j < 6 - i; j++)
                s = "0" + s;

        }
        String s3 = s.substring(0, 2);
        String s4 = s.substring(2, 4);
        String s5 = s.substring(4, 6);
        String s6 = "";
        if(s1.equals(":"))
            s6 = s3 + ":" + s4 + ":" + s5;
        else
        if(s1.equals("\u6642\u5206\u79D2"))
            s6 = s3 + "\u6642" + s4 + "\u5206" + s5 + "\u79D2";
        else
        if(s1.equals("hms"))
            s6 = s3 + "h" + s4 + "m" + s5 + "s";
        else
            s6 = s2;
        return s6;
    }

    static boolean jdk15_plus = isJdk15_plus();
    static String enc1[] = {
        "\u3001", "\u3001", "\u30FB", "\u30FB", "\u02C9", "\250", "\u2015", "\uFF5E", "\u3014", "\u3014", 
        "\u3015", "\u3015", "\u3009", "\u3009", "\u300A", "\u300A", "\u300B", "\u300B", "\u300C", "\u300C", 
        "\u300D", "\u300D", "\u300E", "\u300E", "\u300F", "\u300F", "\u3010", "\u3010", "\u3011", "\u3011", 
        "\u2236", "\u2227", "\u2211", "\u220F", "\u2299", "\u2248", "\u2264", "\u2265", "\u2033", "\uFF04", 
        "\uFF04", "\uFFE0", "\uFFE1", "\u3013", "\uFF01", "\uFF01", "\uFF02", "\uFF03", "\uFF03", "\uFF05", 
        "\uFF05", "\uFF06", "\uFF06", "\uFF07", "\uFF08", "\uFF08", "\uFF08", "\uFF09", "\uFF09", "\uFF09", 
        "\uFF0A", "\uFF0A", "\uFF0B", "\uFF0B", "\uFF0C", "\uFF0C", "\uFF0D", "\uFF0D", "\uFF0E", "\uFF0E", 
        "\uFF0F", "\uFF1A", "\uFF1A", "\uFF1B", "\uFF1B", "\uFF1C", "\uFF1C", "\uFF1D", "\uFF1D", "\uFF1E", 
        "\uFF1E", "\uFF1F", "\uFF1F", "\uFF20", "\uFF20", "\uFF3B", "\uFF3C", "\uFF3D", "\uFF3E", "\uFF3F", 
        "\uFF3F", "\uFF40", "\uFF5B", "\uFF5B", "\uFF5B", "\uFF5C", "\uFF5C", "\uFF5C", "\uFF5D", "\uFF5D", 
        "\uFF5D", "\uFFE3", "\u7691", "\u853C", "\u788D", "\u7231", "\u6697", "\u6697", "\u80AE", "\u6602", 
        "\u6602", "\u8884", "\u5965", "\u575D", "\u7F62", "\u6446", "\u8D25", "\u9881", "\u677F", "\u677F", 
        "\u529E", "\u7ECA", "\u5E2E", "\u7ED1", "\u9551", "\u8C24", "\u5265", "\u9971", "\u5B9D", "\u62A5", 
        "\u9C8D", "\u8F88", "\u80CC", "\u80CC", "\u8D1D", "\u94A1", "\u72C8", "\u5907", "\u60EB", "\u7EF7", 
        "\u903C", "\u903C", "\u7B14", "\u6BD5", "\u6BD9", "\u5E01", "\u75F9", "\u95ED", "\u8F9F", "\u8F9F", 
        "\u8FB9", "\u7F16", "\u8D2C", "\u6241", "\u6241", "\u6241", "\u53D8", "\u8FA9", "\u8FAB", "\u6807", 
        "\u9CD6", "\u522B", "\u762A", "\u6FD2", "\u6EE8", "\u5BBE", "\u6448", "\u997C", "\u5E76", "\u5E76", 
        "\u5E76", "\u62E8", "\u94B5", "\u94C2", "\u9A73", "\u9A73", "\u535C", "\u535C", "\u54FA", "\u54FA", 
        "\u8865", "\u5E03", "\u5E03", "\u624D", "\u624D", "\u8D22", "\u91C7", "\u91C7", "\u5F69", "\u5F69", 
        "\u53C2", "\u8695", "\u6B8B", "\u60ED", "\u60E8", "\u707F", "\u82CD", "\u8231", "\u4ED3", "\u6CA7", 
        "\u5395", "\u4FA7", "\u518C", "\u6D4B", "\u5C42", "\u8BE7", "\u6400", "\u63BA", "\u8749", "\u998B", 
        "\u8C17", "\u7F20", "\u94F2", "\u94F2", "\u4EA7", "\u9610", "\u98A4", "\u573A", "\u5C1D", "\u5C1D", 
        "\u957F", "\u507F", "\u80A0", "\u5382", "\u7545", "\u949E", "\u8F66", "\u5F7B", "\u5C18", "\u9648", 
        "\u886C", "\u6491", "\u79F0", "\u60E9", "\u6F84", "\u6F84", "\u8BDA", "\u9A8B", "\u5403", "\u5403", 
        "\u75F4", "\u75F4", "\u8FDF", "\u9A70", "\u803B", "\u9F7F", "\u70BD", "\u51B2", "\u51B2", "\u866B", 
        "\u866B", "\u5BA0", "\u7574", "\u8E0C", "\u7B79", "\u7EF8", "\u4E11", "\u4E11", "\u6A71", "\u53A8", 
        "\u9504", "\u96CF", "\u7840", "\u50A8", "\u89E6", "\u5904", "\u4F20", "\u75AE", "\u95EF", "\u521B", 
        "\u9524", "\u7EAF", "\u7EF0", "\u8F9E", "\u8BCD", "\u8D50", "\u806A", "\u8471", "\u56F1", "\u4ECE", 
        "\u4E1B", "\u51D1", "\u8E7F", "\u7A9C", "\u9519", "\u8FBE", "\u5446", "\u5446", "\u5E26", "\u8D37", 
        "\u62C5", "\u5355", "\u90F8", "\u63B8", "\u80C6", "\u60EE", "\u8BDE", "\u5F39", "\u5F53", "\u6321", 
        "\u515A", "\u8361", "\u6863", "\u6363", "\u5C9B", "\u7977", "\u5BFC", "\u76D7", "\u706F", "\u9093", 
        "\u5824", "\u5824", "\u654C", "\u6DA4", "\u9012", "\u7F14", "\u98A0", "\u70B9", "\u57AB", "\u7535", 
        "\u6DC0", "\u96D5", "\u96D5", "\u96D5", "\u540A", "\u540A", "\u9493", "\u8C03", "\u8C0D", "\u53E0", 
        "\u9489", "\u9876", "\u952D", "\u8BA2", "\u4E22", "\u4E1C", "\u52A8", "\u680B", "\u51BB", "\u6597", 
        "\u6597", "\u8C46", "\u8C46", "\u728A", "\u72EC", "\u8BFB", "\u8D4C", "\u9540", "\u953B", "\u65AD", 
        "\u7F0E", "\u5151", "\u961F", "\u5BF9", "\u5428", "\u6566", "\u6566", "\u987F", "\u949D", "\u593A", 
        "\u5815", "\u9E45", "\u989D", "\u8BB9", "\u6076", "\u6076", "\u997F", "\u513F", "\u513F", "\u5C14", 
        "\u9975", "\u8D30", "\u53D1", "\u53D1", "\u7F5A", "\u9600", "\u73D0", "\u77FE", "\u9492", "\u70E6", 
        "\u8D29", "\u996D", "\u6CDB", "\u6CDB", "\u4EFF", "\u4EFF", "\u8BBF", "\u7EBA", "\u98DE", "\u8BFD", 
        "\u5E9F", "\u8D39", "\u7EB7", "\u575F", "\u594B", "\u6124", "\u7CAA", "\u4E30", "\u4E30", "\u67AB", 
        "\u950B", "\u98CE", "\u75AF", "\u51AF", "\u7F1D", "\u8BBD", "\u51E4", "\u4F5B", "\u4F5B", "\u592B", 
        "\u592B", "\u80A4", "\u8F90", "\u629A", "\u8F85", "\u8D4B", "\u590D", "\u590D", "\u8D1F", "\u8BA3", 
        "\u5987", "\u7F1A", "\u8BE5", "\u9499", "\u76D6", "\u5E72", "\u5E72", "\u6746", "\u6746", "\u8D76", 
        "\u79C6", "\u8D63", "\u5188", "\u521A", "\u94A2", "\u7EB2", "\u5C97", "\u9550", "\u6401", "\u9E3D", 
        "\u9601", "\u94EC", "\u4E2A", "\u7ED9", "\u9F9A", "\u5BAB", "\u5DE9", "\u8D21", "\u94A9", "\u6C9F", 
        "\u6784", "\u8D2D", "\u591F", "\u86CA", "\u8C37", "\u8C37", "\u987E", "\u96C7", "\u96C7", "\u522E", 
        "\u522E", "\u5250", "\u6302", "\u6302", "\u5173", "\u89C2", "\u9986", "\u60EF", "\u8D2F", "\u5E7F", 
        "\u89C4", "\u5F52", "\u9F9F", "\u95FA", "\u8F68", "\u8BE1", "\u67DC", "\u67DC", "\u8D35", "\u523D", 
        "\u8F8A", "\u6EDA", "\u9505", "\u56FD", "\u8FC7", "\u9A87", "\u97E9", "\u710A", "\u710A", "\u6C49", 
        "\u53F7", "\u9602", "\u9E64", "\u8D3A", "\u6A2A", "\u6052", "\u8F70", "\u54C4", "\u54C4", "\u9E3F", 
        "\u7EA2", "\u58F6", "\u80E1", "\u80E1", "\u62A4", "\u6CAA", "\u6237", "\u54D7", "\u54D7", "\u534E", 
        "\u753B", "\u5212", "\u5212", "\u8BDD", "\u6000", "\u574F", "\u574F", "\u6B22", "\u73AF", "\u8FD8", 
        "\u7F13", "\u6362", "\u5524", "\u75EA", "\u7115", "\u6DA3", "\u9EC4", "\u8C0E", "\u6325", "\u8F89", 
        "\u6BC1", "\u6BC1", "\u6BC1", "\u8D3F", "\u79FD", "\u4F1A", "\u70E9", "\u6C47", "\u6C47", "\u8BB3", 
        "\u8BF2", "\u7ED8", "\u8364", "\u6D51", "\u83B7", "\u83B7", "\u8D27", "\u7978", "\u51FB", "\u673A", 
        "\u79EF", "\u9965", "\u9965", "\u8FF9", "\u8FF9", "\u8BA5", "\u9E21", "\u7EE9", "\u7EE9", "\u7F09", 
        "\u6781", "\u8F91", "\u7EA7", "\u6324", "\u51E0", "\u51E0", "\u84DF", "\u5242", "\u6D4E", "\u8BA1", 
        "\u8BB0", "\u9645", "\u7EE7", "\u7EAA", "\u5939", "\u5BB6", "\u5BB6", "\u835A", "\u988A", "\u8D3E", 
        "\u94BE", "\u4EF7", "\u9A7E", "\u6B7C", "\u76D1", "\u575A", "\u7B3A", "\u95F4", "\u8270", "\u5978", 
        "\u5978", "\u7F04", "\u8327", "\u68C0", "\u78B1", "\u7877", "\u62E3", "\u6361", "\u7B80", "\u4FED", 
        "\u51CF", "\u8350", "\u8350", "\u69DB", "\u9274", "\u8DF5", "\u8D31", "\u89C1", "\u952E", "\u8230", 
        "\u5251", "\u996F", "\u6E10", "\u6E85", "\u6DA7", "\u50F5", "\u50F5", "\u59DC", "\u59DC", "\u5C06", 
        "\u6D46", "\u848B", "\u6868", "\u5956", "\u8BB2", "\u9171", "\u80F6", "\u6D47", "\u9A84", "\u5A07", 
        "\u6405", "\u94F0", "\u77EB", "\u4FA5", "\u811A", "\u997A", "\u7F34", "\u7EDE", "\u8F7F", "\u8F83", 
        "\u9636", "\u8282", "\u6770", "\u6770", "\u6D01", "\u7ED3", "\u8BEB", "\u5C4A", "\u7D27", "\u9526", 
        "\u4EC5", "\u8C28", "\u8FDB", "\u664B", "\u70EC", "\u5C3D", "\u5C3D", "\u52B2", "\u8346", "\u830E", 
        "\u9CB8", "\u60CA", "\u7ECF", "\u9888", "\u9759", "\u955C", "\u5F84", "\u75C9", "\u7ADE", "\u51C0", 
        "\u51C0", "\u7EA0", "\u53A9", "\u65E7", "\u9A79", "\u5C40", "\u5C40", "\u4E3E", "\u636E", "\u952F", 
        "\u60E7", "\u5267", "\u9E43", "\u5377", "\u5377", "\u7EE2", "\u89C9", "\u51B3", "\u8BC0", "\u7EDD", 
        "\u94A7", "\u519B", "\u9A8F", "\u5F00", "\u51EF", "\u9897", "\u58F3", "\u514B", "\u514B", "\u8BFE", 
        "\u57A6", "\u6073", "\u62A0", "\u6263", "\u6263", "\u5E93", "\u88E4", "\u5938", "\u5938", "\u5757", 
        "\u4FA9", "\u5BBD", "\u77FF", "\u65F7", "\u51B5", "\u4E8F", "\u5CBF", "\u7AA5", "\u9988", "\u6E83", 
        "\u6606", "\u6606", "\u56F0", "\u56F0", "\u56F0", "\u6269", "\u9614", "\u8721", "\u814A", "\u83B1", 
        "\u6765", "\u8D56", "\u84DD", "\u680F", "\u62E6", "\u7BEE", "\u9611", "\u5170", "\u6F9C", "\u8C30", 
        "\u63FD", "\u89C8", "\u61D2", "\u7F06", "\u70C2", "\u6EE5", "\u7405", "\u7405", "\u635E", "\u52B3", 
        "\u6D9D", "\u4E50", "\u956D", "\u5792", "\u7C7B", "\u6CEA", "\u7BF1", "\u79BB", "\u91CC", "\u91CC", 
        "\u91CC", "\u9CA4", "\u793C", "\u6817", "\u6817", "\u4E3D", "\u5389", "\u52B1", "\u783E", "\u5386", 
        "\u5386", "\u6CA5", "\u96B6", "\u4FE9", "\u8054", "\u83B2", "\u8FDE", "\u8FDE", "\u9570", "\u601C", 
        "\u6D9F", "\u655B", "\u8138", "\u94FE", "\u604B", "\u70BC", "\u70BC", "\u7EC3", "\u7CAE", "\u51C9", 
        "\u6881", "\u6881", "\u4E24", "\u8F86", "\u8C05", "\u7597", "\u8FBD", "\u4E86", "\u4E86", "\u9563", 
        "\u730E", "\u4E34", "\u90BB", "\u9CDE", "\u51DB", "\u8D41", "\u9F84", "\u94C3", "\u7075", "\u5CAD", 
        "\u9886", "\u998F", "\u5218", "\u9F99", "\u804B", "\u5499", "\u7B3C", "\u5784", "\u62E2", "\u9647", 
        "\u697C", "\u5A04", "\u6402", "\u7BD3", "\u82A6", "\u5362", "\u9885", "\u5E90", "\u7089", "\u63B3", 
        "\u5364", "\u5364", "\u864F", "\u9C81", "\u8D42", "\u7984", "\u5F55", "\u9646", "\u9A74", "\u5415", 
        "\u94DD", "\u4FA3", "\u5C61", "\u7F15", "\u8651", "\u6EE4", "\u7EFF", "\u5CE6", "\u631B", "\u5B6A", 
        "\u6EE6", "\u4E71", "\u62A1", "\u8F6E", "\u4F26", "\u4ED1", "\u4ED1", "\u6CA6", "\u7EB6", "\u8BBA", 
        "\u841D", "\u7F57", "\u7F57", "\u903B", "\u9523", "\u7BA9", "\u9AA1", "\u9A86", "\u7EDC", "\u5988", 
        "\u739B", "\u7801", "\u8682", "\u9A6C", "\u9A82", "\u5417", "\u4E70", "\u9EA6", "\u5356", "\u8FC8", 
        "\u8109", "\u7792", "\u9992", "\u86EE", "\u6EE1", "\u8C29", "\u732B", "\u951A", "\u94C6", "\u8D38", 
        "\u4E48", "\u4E48", "\u6CA1", "\u9541", "\u95E8", "\u95F7", "\u4EEC", "\u8499", "\u8499", "\u8499", 
        "\u9530", "\u68A6", "\u772F", "\u8C1C", "\u5F25", "\u5F25", "\u79D8", "\u79D8", "\u89C5", "\u5E42", 
        "\u7EF5", "\u7F05", "\u9762", "\u9762", "\u5E99", "\u706D", "\u60AF", "\u95FD", "\u9E23", "\u94ED", 
        "\u8C2C", "\u8C0B", "\u4EA9", "\u5450", "\u94A0", "\u7EB3", "\u96BE", "\u6320", "\u8111", "\u607C", 
        "\u95F9", "\u9981", "\u5185", "\u62DF", "\u817B", "\u64B5", "\u637B", "\u637B", "\u5FF5", "\u5FF5", 
        "\u5A18", "\u5A18", "\u917F", "\u9E1F", "\u8042", "\u556E", "\u954A", "\u954D", "\u67E0", "\u72DE", 
        "\u5B81", "\u62E7", "\u6CDE", "\u94AE", "\u7EBD", "\u8113", "\u6D53", "\u519C", "\u759F", "\u8BFA", 
        "\u6B27", "\u9E25", "\u6BB4", "\u5455", "\u6CA4", "\u76D8", "\u76D8", "\u5E9E", "\u629B", "\u5228", 
        "\u5228", "\u70AE", "\u70AE", "\u8D54", "\u4F69", "\u4F69", "\u55B7", "\u9E4F", "\u9A97", "\u98D8", 
        "\u9891", "\u8D2B", "\u82F9", "\u51ED", "\u8BC4", "\u6CFC", "\u9887", "\u6251", "\u6251", "\u94FA", 
        "\u94FA", "\u4EC6", "\u4EC6", "\u8C31", "\u6816", "\u621A", "\u621A", "\u51C4", "\u51C4", "\u8110", 
        "\u9F50", "\u9A91", "\u5C82", "\u542F", "\u6C14", "\u5F03", "\u8BAB", "\u7275", "\u94C5", "\u5343", 
        "\u5343", "\u8FC1", "\u7B7E", "\u7B7E", "\u8C26", "\u94B1", "\u94B3", "\u6F5C", "\u6D45", "\u8C34", 
        "\u5811", "\u67AA", "\u67AA", "\u545B", "\u5899", "\u8537", "\u5F3A", "\u62A2", "\u9539", "\u6865", 
        "\u4E54", "\u4FA8", "\u7FD8", "\u7A8D", "\u7A83", "\u94A6", "\u4EB2", "\u5BDD", "\u8F7B", "\u6C22", 
        "\u503E", "\u9877", "\u8BF7", "\u5E86", "\u743C", "\u7A77", "\u79CB", "\u79CB", "\u4E18", "\u4E18", 
        "\u8D8B", "\u533A", "\u8EAF", "\u9A71", "\u9F8B", "\u98A7", "\u6743", "\u529D", "\u5374", "\u9E4A", 
        "\u786E", "\u8BA9", "\u9976", "\u6270", "\u7ED5", "\u70ED", "\u97E7", "\u8BA4", "\u7EAB", "\u8363", 
        "\u7ED2", "\u8F6F", "\u9510", "\u95F0", "\u6DA6", "\u8428", "\u9CC3", "\u8D5B", "\u53C1", "\u4F1E", 
        "\u4E27", "\u9A9A", "\u626B", "\u6DA9", "\u6740", "\u5239", "\u7EB1", "\u7B5B", "\u6652", "\u6652", 
        "\u5220", "\u95EA", "\u9655", "\u8D61", "\u7F2E", "\u4F24", "\u8D4F", "\u70E7", "\u7ECD", "\u8D4A", 
        "\u820D", "\u820D", "\u6444", "\u6151", "\u8BBE", "\u7EC5", "\u5BA1", "\u5A76", "\u80BE", "\u6E17", 
        "\u58F0", "\u5347", "\u5347", "\u5347", "\u7EF3", "\u80DC", "\u5723", "\u5E08", "\u72EE", "\u6E7F", 
        "\u8BD7", "\u5C38", "\u5C38", "\u65F6", "\u8680", "\u5B9E", "\u8BC6", "\u9A76", "\u52BF", "\u9002", 
        "\u91CA", "\u9970", "\u89C6", "\u8BD5", "\u5BFF", "\u517D", "\u67A2", "\u8F93", "\u4E66", "\u8D4E", 
        "\u5C5E", "\u672F", "\u672F", "\u6811", "\u7AD6", "\u6570", "\u5E05", "\u53CC", "\u8C01", "\u7A0E", 
        "\u987A", "\u8BF4", "\u7855", "\u70C1", "\u4E1D", "\u9972", "\u677E", "\u677E", "\u8038", "\u6002", 
        "\u9882", "\u8BBC", "\u8BF5", "\u64DE", "\u82CF", "\u82CF", "\u82CF", "\u8BC9", "\u8083", "\u867D", 
        "\u968F", "\u7EE5", "\u5C81", "\u5B59", "\u635F", "\u7B0B", "\u7F29", "\u7410", "\u9501", "\u736D", 
        "\u631E", "\u6001", "\u644A", "\u8D2A", "\u762B", "\u6EE9", "\u575B", "\u8C2D", "\u8C08", "\u53F9", 
        "\u53F9", "\u6C64", "\u70EB", "\u638F", "\u638F", "\u6D9B", "\u7EE6", "\u9676", "\u9676", "\u8BA8", 
        "\u817E", "\u8A8A", "\u9511", "\u9898", "\u4F53", "\u5243", "\u5243", "\u5C49", "\u6761", "\u8D34", 
        "\u94C1", "\u5385", "\u542C", "\u70C3", "\u94DC", "\u7EDF", "\u5934", "\u79C3", "\u56FE", "\u6D82", 
        "\u6D82", "\u56E2", "\u56E2", "\u9893", "\u8715", "\u6258", "\u6258", "\u8131", "\u9E35", "\u9A6E", 
        "\u9A7C", "\u692D", "\u6D3C", "\u889C", "\u5F2F", "\u6E7E", "\u987D", "\u633D", "\u633D", "\u4E07", 
        "\u7F51", "\u97E6", "\u8FDD", "\u56F4", "\u4E3A", "\u6F4D", "\u7EF4", "\u82C7", "\u4F1F", "\u4F2A", 
        "\u7EAC", "\u5582", "\u5582", "\u8C13", "\u536B", "\u6E29", "\u95FB", "\u7EB9", "\u7A33", "\u95EE", 
        "\u631D", "\u8717", "\u6DA1", "\u7A9D", "\u5367", "\u545C", "\u94A8", "\u4E4C", "\u6C61", "\u6C61", 
        "\u8BEC", "\u65E0", "\u829C", "\u5434", "\u6342", "\u6342", "\u575E", "\u96FE", "\u52A1", "\u8BEF", 
        "\u9521", "\u727A", "\u6EAA", "\u6EAA", "\u88AD", "\u5E2D", "\u5E2D", "\u4E60", "\u94E3", "\u7CFB", 
        "\u7CFB", "\u7CFB", "\u620F", "\u7EC6", "\u867E", "\u8F96", "\u5CE1", "\u4FA0", "\u72ED", "\u53A6", 
        "\u5413", "\u4ED9", "\u4ED9", "\u9C9C", "\u7EA4", "\u7EA4", "\u54B8", "\u54B8", "\u8D24", "\u8854", 
        "\u8854", "\u95F2", "\u5F26", "\u5F26", "\u663E", "\u9669", "\u73B0", "\u732E", "\u53BF", "\u9985", 
        "\u7FA1", "\u5BAA", "\u7EBF", "\u53A2", "\u9576", "\u4E61", "\u8BE6", "\u54CD", "\u9879", "\u5411", 
        "\u5411", "\u8427", "\u56A3", "\u9500", "\u6653", "\u5578", "\u6548", "\u6548", "\u874E", "\u534F", 
        "\u631F", "\u643A", "\u80C1", "\u8C10", "\u5199", "\u6CFB", "\u8C22", "\u950C", "\u6B23", "\u6B23", 
        "\u8845", "\u5174", "\u5E78", "\u5E78", "\u51F6", "\u51F6", "\u6C79", "\u6C79", "\u6C79", "\u9508", 
        "\u7EE3", "\u865A", "\u5618", "\u987B", "\u987B", "\u8BB8", "\u53D9", "\u6064", "\u6064", "\u7EEA", 
        "\u7EED", "\u8F69", "\u55A7", "\u55A7", "\u60AC", "\u9009", "\u7663", "\u7EDA", "\u5B66", "\u52CB", 
        "\u52CB", "\u718F", "\u718F", "\u8BE2", "\u5BFB", "\u9A6F", "\u8BAD", "\u8BAF", "\u900A", "\u538B", 
        "\u9E26", "\u9E2D", "\u54D1", "\u4E9A", "\u8BB6", "\u9609", "\u70DF", "\u76D0", "\u4E25", "\u5CA9", 
        "\u5CA9", "\u989C", "\u960E", "\u8273", "\u538C", "\u781A", "\u5F66", "\u7130", "\u7130", "\u5BB4", 
        "\u5BB4", "\u8C1A", "\u9A8C", "\u9E2F", "\u6768", "\u626C", "\u75A1", "\u9633", "\u517B", "\u6837", 
        "\u7476", "\u6447", "\u5C27", "\u9065", "\u7A91", "\u8C23", "\u836F", "\u7237", "\u9875", "\u4E1A", 
        "\u53F6", "\u533B", "\u94F1", "\u9890", "\u9057", "\u4EEA", "\u8681", "\u827A", "\u4EBF", "\u5FC6", 
        "\u4E49", "\u8BE3", "\u8BAE", "\u8C0A", "\u8BD1", "\u5F02", "\u7ECE", "\u836B", "\u9634", "\u94F6", 
        "\u996E", "\u9690", "\u6A31", "\u5A74", "\u9E70", "\u5E94", "\u7F28", "\u83B9", "\u8424", "\u8425", 
        "\u8367", "\u8747", "\u8D62", "\u9896", "\u54DF", "\u62E5", "\u75C8", "\u8E0A", "\u8E0A", "\u548F", 
        "\u6D8C", "\u6D8C", "\u4F18", "\u5FE7", "\u90AE", "\u94C0", "\u72B9", "\u6E38", "\u6E38", "\u4F51", 
        "\u4F51", "\u8BF1", "\u4E8E", "\u4E8E", "\u8206", "\u903E", "\u903E", "\u9C7C", "\u6E14", "\u5A31", 
        "\u4E0E", "\u5C7F", "\u8BED", "\u90C1", "\u90C1", "\u5401", "\u5401", "\u5FA1", "\u5FA1", "\u6108", 
        "\u6108", "\u6B32", "\u6B32", "\u72F1", "\u8A89", "\u9884", "\u9A6D", "\u9E33", "\u6E0A", "\u8F95", 
        "\u56ED", "\u5458", "\u5706", "\u7F18", "\u8FDC", "\u613F", "\u613F", "\u7EA6", "\u8DC3", "\u94A5", 
        "\u5CB3", "\u5CB3", "\u7CA4", "\u60A6", "\u9605", "\u4E91", "\u4E91", "\u90E7", "\u5300", "\u9668", 
        "\u8FD0", "\u8574", "\u915D", "\u6655", "\u97F5", "\u6742", "\u707E", "\u8F7D", "\u6512", "\u6682", 
        "\u8D5E", "\u8D5E", "\u8D43", "\u810F", "\u810F", "\u7CDF", "\u7CDF", "\u51FF", "\u67A3", "\u566A", 
        "\u566A", "\u8D23", "\u62E9", "\u5219", "\u6CFD", "\u8D3C", "\u8D60", "\u624E", "\u624E", "\u672D", 
        "\u672D", "\u8F67", "\u94E1", "\u95F8", "\u6805", "\u8BC8", "\u658B", "\u503A", "\u6BE1", "\u6CBE", 
        "\u6CBE", "\u76CF", "\u76CF", "\u65A9", "\u8F97", "\u5D2D", "\u6808", "\u5360", "\u5360", "\u6218", 
        "\u7EFD", "\u5F20", "\u6DA8", "\u5E10", "\u8D26", "\u80C0", "\u8D75", "\u86F0", "\u8F99", "\u9517", 
        "\u8FD9", "\u8D1E", "\u9488", "\u9488", "\u4FA6", "\u8BCA", "\u9547", "\u9635", "\u6323", "\u7741", 
        "\u72F0", "\u4E89", "\u5E27", "\u90D1", "\u8BC1", "\u8BC1", "\u7EC7", "\u804C", "\u6267", "\u4F84", 
        "\u4F84", "\u53EA", "\u53EA", "\u53EA", "\u7EB8", "\u5FD7", "\u5FD7", "\u631A", "\u63B7", "\u81F4", 
        "\u81F4", "\u5E1C", "\u5236", "\u5236", "\u8D28", "\u6EDE", "\u949F", "\u7EC8", "\u79CD", "\u80BF", 
        "\u4F17", "\u5468", "\u5468", "\u5468", "\u8BCC", "\u8F74", "\u76B1", "\u663C", "\u9AA4", "\u6731", 
        "\u6731", "\u732A", "\u8BF8", "\u8BDB", "\u70DB", "\u77A9", "\u5631", "\u8D2E", "\u94F8", "\u7B51", 
        "\u7B51", "\u6CE8", "\u6CE8", "\u9A7B", "\u4E13", "\u4E13", "\u7816", "\u8F6C", "\u64B0", "\u64B0", 
        "\u8D5A", "\u6869", "\u5E84", "\u5E84", "\u88C5", "\u5986", "\u58EE", "\u72B6", "\u9525", "\u8D58", 
        "\u5760", "\u7F00", "\u8C06", "\u51C6", "\u51C6", "\u7740", "\u6D4A", "\u5179", "\u8D44", "\u6E0D", 
        "\u8E2A", "\u7EFC", "\u603B", "\u7EB5", "\u90B9", "\u8BC5", "\u7EC4", "\u94BB", "\u4E98", "\u777E", 
        "\u8288", "\u556C", "\u538D", "\u53A3", "\u9765", "\u8D5D", "\u5326", "\u532E", "\u533E", "\u533E", 
        "\u8D5C", "\u522D", "\u523F", "\u5240", "\u4F1B", "\u4F25", "\u4F27", "\u4F2B", "\u4FAA", "\u4FAC", 
        "\u4FE6", "\u4FE8", "\u4FEA", "\u4FE3", "\u507E", "\u506C", "\u507B", "\u50A5", "\u50A7", "\u50A9", 
        "\u6C3D", "\u4F65", "\u7C74", "\u9EC9", "\u5181", "\u51EB", "\u5156", "\u886E", "\u4EB5", "\u8114", 
        "\u7980", "\u51A2", "\u8BA6", "\u8BA7", "\u8BAA", "\u8BB4", "\u8BB5", "\u8BB7", "\u8BC2", "\u8BC3", 
        "\u8BCB", "\u8BCF", "\u8BD2", "\u8BD3", "\u8BD4", "\u8BD6", "\u8BD8", "\u8BD9", "\u8BDC", "\u8BDF", 
        "\u8BE0", "\u8BE4", "\u8BE8", "\u8BE9", "\u8BEE", "\u8BF0", "\u8BF3", "\u8BF6", "\u8BF9", "\u8BFC", 
        "\u8BFF", "\u8C00", "\u8C02", "\u8C04", "\u8C07", "\u8C0C", "\u8C0F", "\u8C11", "\u8C12", "\u8C14", 
        "\u8C15", "\u8C16", "\u8C19", "\u8C1B", "\u8C18", "\u8C1D", "\u8C1F", "\u8C20", "\u8C21", "\u8C25", 
        "\u8C27", "\u8C2A", "\u8C2B", "\u8C2E", "\u8C2F", "\u8C32", "\u8C33", "\u8C35", "\u8C36", "\u537A", 
        "\u9649", "\u9667", "\u909D", "\u90AC", "\u90BA", "\u90CF", "\u90D0", "\u90D3", "\u90E6", "\u520D", 
        "\u5942", "\u52A2", "\u5DEF", "\u57A9", "\u5739", "\u575C", "\u5786", "\u57AD", "\u57B2", "\u57D8", 
        "\u57DA", "\u57D9", "\u8297", "\u82C8", "\u82CB", "\u82CC", "\u82C1", "\u82CE", "\u830F", "\u8311", 
        "\u8314", "\u8315", "\u835B", "\u835C", "\u835E", "\u835F", "\u8360", "\u8366", "\u8365", "\u8369", 
        "\u836A", "\u836D", "\u83B3", "\u83B4", "\u8385", "\u83B8", "\u83BA", "\u8426", "\u8487", "\u8489", 
        "\u848C", "\u84E6", "\u84E0", "\u84E3", "\u8539", "\u853A", "\u8572", "\u85AE", "\u85D3", "\u5941", 
        "\u5C34", "\u626A", "\u629F", "\u6322", "\u63B4", "\u63BC", "\u63FF", "\u6445", "\u640C", "\u6484", 
        "\u64B7", "\u64B8", "\u64BA", "\u5F11", "\u53FD", "\u5452", "\u5453", "\u5456", "\u5457", "\u549B", 
        "\u54D2", "\u54D3", "\u54D4", "\u54D5", "\u54D9", "\u54DC", "\u54DD", "\u551B", "\u5520", "\u5522", 
        "\u5567", "\u556D", "\u5555", "\u5555", "\u55BD", "\u55BE", "\u55C9", "\u55C9", "\u55EB", "\u55F3", 
        "\u8F94", "\u5624", "\u565C", "\u56F5", "\u5E0F", "\u5E31", "\u5E3B", "\u5E3C", "\u5C96", "\u5C98", 
        "\u5C9A", "\u5CC4", "\u5CE4", "\u5CE5", "\u5D02", "\u5D03", "\u5D58", "\u5D5B", "\u5D5D", "\u5DC5", 
        "\u5F87", "\u5F87", "\u5F95", "\u72B7", "\u72EF", "\u72F2", "\u7303", "\u7321", "\u7315", "\u9967", 
        "\u9968", "\u9969", "\u996A", "\u996B", "\u996C", "\u9974", "\u9977", "\u9977", "\u997D", "\u9980", 
        "\u9984", "\u998A", "\u998D", "\u9990", "\u9991", "\u9994", "\u5E91", "\u8D53", "\u5EEA", "\u5FCF", 
        "\u6003", "\u6004", "\u5FFE", "\u6005", "\u6006", "\u603F", "\u6078", "\u6079", "\u607B", "\u607A", 
        "\u607D", "\u60AD", "\u60EC", "\u6120", "\u6126", "\u61D4", "\u95E9", "\u95EB", "\u95F1", "\u95F3", 
        "\u95F5", "\u95F6", "\u95FC", "\u95FE", "\u9603", "\u9604", "\u9606", "\u9608", "\u960A", "\u960C", 
        "\u960D", "\u960F", "\u9612", "\u9615", "\u9616", "\u9616", "\u9617", "\u9619", "\u961A", "\u6CA3", 
        "\u6CA9", "\u6CF7", "\u6CF8", "\u6CFA", "\u6CFE", "\u6D43", "\u6D48", "\u6D4D", "\u6D4F", "\u6D52", 
        "\u6D54", "\u6D9E", "\u6DA0", "\u6E0E", "\u6E11", "\u6E16", "\u6E0C", "\u6E86", "\u6EDF", "\u6EE0", 
        "\u6EE2", "\u6ED7", "\u6F46", "\u6F47", "\u6F4B", "\u6F74", "\u6FD1", "\u704F", "\u9A9E", "\u8FE9", 
        "\u8FF3", "\u9026", "\u5C66", "\u5F2A", "\u59A9", "\u59AA", "\u59AB", "\u59D7", "\u5A05", "\u5A06", 
        "\u5A08", "\u5A32", "\u5A34", "\u5A75", "\u5AAA", "\u5AD2", "\u5AD4", "\u5AF1", "\u5B37", "\u9A75", 
        "\u9A77", "\u9A78", "\u9A7A", "\u9A7F", "\u9A7D", "\u9A80", "\u9A81", "\u9A85", "\u9A88", "\u9A8A", 
        "\u9A90", "\u9A92", "\u9A93", "\u9A96", "\u9A98", "\u9A9B", "\u9A9C", "\u9A9D", "\u9A9F", "\u9AA0", 
        "\u9AA2", "\u9AA3", "\u9AA5", "\u9AA7", "\u7EA1", "\u7EA3", "\u7EA5", "\u7EA8", "\u7EA9", "\u7EAD", 
        "\u7EB0", "\u7EBE", "\u7EC0", "\u7EC1", "\u7EC2", "\u7EC9", "\u7ECB", "\u7ECC", "\u7ED7", "\u7EDB", 
        "\u7EE0", "\u7EE1", "\u7EE8", "\u7EEB", "\u7EEE", "\u7EEF", "\u7EF2", "\u7F0D", "\u7EF6", "\u7EFA", 
        "\u7EFB", "\u7EFE", "\u7F01", "\u7F02", "\u7F03", "\u7F07", "\u7F08", "\u7F0B", "\u7F0C", "\u7F0F", 
        "\u7F11", "\u7F12", "\u7F17", "\u7F19", "\u7F1C", "\u7F1B", "\u7F1F", "\u7F21", "\u7F22", "\u7F23", 
        "\u7F24", "\u7F25", "\u7F26", "\u7F27", "\u7F2A", "\u7F2B", "\u7F2C", "\u7F2D", "\u7F2F", "\u7F31", 
        "\u7F32", "\u7F33", "\u7F35", "\u7391", "\u73AE", "\u73CF", "\u73D1", "\u987C", "\u73BA", "\u73F2", 
        "\u740F", "\u7477", "\u748E", "\u74D2", "\u97EA", "\u97EB", "\u97EC", "\u6769", "\u67A5", "\u67A8", 
        "\u679E", "\u67AD", "\u6809", "\u680A", "\u680C", "\u6800", "\u680E", "\u67FD", "\u6860", "\u6861", 
        "\u6862", "\u6864", "\u6866", "\u6867", "\u683E", "\u68C2", "\u691F", "\u6920", "\u6924", "\u6901", 
        "\u6984", "\u6987", "\u6988", "\u6989", "\u69DF", "\u69E0", "\u6A2F", "\u6A65", "\u6A79", "\u6A7C", 
        "\u6A90", "\u6A90", "\u6AA9", "\u6B81", "\u6B87", "\u6B92", "\u6B93", "\u6B9A", "\u6BA1", "\u8F6B", 
        "\u8F6D", "\u8F72", "\u8F73", "\u8F75", "\u8F76", "\u8F78", "\u8F79", "\u8F7A", "\u8F7C", "\u8F7E", 
        "\u8F81", "\u8F82", "\u8F84", "\u8F87", "\u8F8B", "\u8F8D", "\u8F8E", "\u8F8F", "\u8F98", "\u8F9A", 
        "\u620B", "\u6217", "\u622C", "\u74EF", "\u6619", "\u6654", "\u6656", "\u66A7", "\u8D32", "\u8D33", 
        "\u8D36", "\u8D3B", "\u8D3D", "\u8D40", "\u8D45", "\u8D46", "\u8D48", "\u8D49", "\u8D47", "\u8D55", 
        "\u8D59", "\u89C7", "\u89CA", "\u89CB", "\u89CC", "\u89CE", "\u89CF", "\u89D0", "\u89D1", "\u6BF5", 
        "\u6C07", "\u6C29", "\u6C32", "\u724D", "\u80B4", "\u80B4", "\u80B4", "\u80E7", "\u80E7", "\u80EA", 
        "\u80C4", "\u80EB", "\u810D", "\u8136", "\u814C", "\u814C", "\u817D", "\u8191", "\u6B24", "\u98D1", 
        "\u98D2", "\u98D3", "\u98D5", "\u98D9", "\u6BC2", "\u9F51", "\u6593", "\u7080", "\u709C", "\u7096", 
        "\u70AB", "\u70AB", "\u70E8", "\u7116", "\u7118", "\u7962", "\u796F", "\u7985", "\u603C", "\u60AB", 
        "\u61D1", "\u6206", "\u6CF6", "\u77F6", "\u7800", "\u7817", "\u783A", "\u783B", "\u7856", "\u7857", 
        "\u789B", "\u789C", "\u7934", "\u9F9B", "\u7750", "\u7751", "\u7572", "\u7F74", "\u7F81", "\u9486", 
        "\u9487", "\u948B", "\u948A", "\u948C", "\u948D", "\u948F", "\u9490", "\u9494", "\u9497", "\u9495", 
        "\u949B", "\u949C", "\u94A3", "\u94A4", "\u94AB", "\u94AA", "\u94AD", "\u94AC", "\u94AF", "\u94B0", 
        "\u94B2", "\u94B4", "\u94B6", "\u94B8", "\u94B9", "\u94BA", "\u94BC", "\u94BD", "\u94BF", "\u94C4", 
        "\u94C8", "\u94C9", "\u94CA", "\u94CB", "\u94CC", "\u94CD", "\u94CE", "\u94D0", "\u94D1", "\u94D2", 
        "\u94D5", "\u94D6", "\u94D7", "\u94D9", "\u94DB", "\u94DF", "\u94E0", "\u94E2", "\u94E4", "\u94E5", 
        "\u94E7", "\u94E8", "\u94EA", "\u94E9", "\u94EB", "\u94EE", "\u94EF", "\u94F3", "\u94F4", "\u94F5", 
        "\u94F7", "\u94F9", "\u94FC", "\u94FD", "\u94FF", "\u9502", "\u9506", "\u9507", "\u9509", "\u9509", 
        "\u950A", "\u9512", "\u9513", "\u9514", "\u9515", "\u9516", "\u951B", "\u951E", "\u951F", "\u9522", 
        "\u9529", "\u952C", "\u9531", "\u9532", "\u9534", "\u9536", "\u9537", "\u9538", "\u953C", "\u953E", 
        "\u9542", "\u9535", "\u9546", "\u9549", "\u954C", "\u954F", "\u9552", "\u9553", "\u9554", "\u9556", 
        "\u9557", "\u9558", "\u9559", "\u955B", "\u955E", "\u955F", "\u955D", "\u9561", "\u9564", "\u9566", 
        "\u9567", "\u9568", "\u956A", "\u956B", "\u956C", "\u956F", "\u9571", "\u9573", "\u953A", "\u7A51", 
        "\u9E20", "\u9E22", "\u9E28", "\u9E29", "\u9E2A", "\u9E2B", "\u9E2C", "\u9E32", "\u9E31", "\u9E36", 
        "\u9E38", "\u9E37", "\u9E39", "\u9E3A", "\u9E3E", "\u9E41", "\u9E42", "\u9E44", "\u9E46", "\u9E47", 
        "\u9E48", "\u9E49", "\u9E4C", "\u9E4E", "\u9E51", "\u9E55", "\u9E57", "\u9E5E", "\u9E63", "\u9E66", 
        "\u9E67", "\u9E68", "\u9E69", "\u9E6A", "\u9E6B", "\u9E6C", "\u9E6D", "\u9E73", "\u7596", "\u75A0", 
        "\u75E8", "\u75EB", "\u7605", "\u7617", "\u763F", "\u763E", "\u765E", "\u766B", "\u7AA6", "\u7AAD", 
        "\u88C6", "\u88E2", "\u88E3", "\u88E5", "\u891B", "\u8934", "\u76B2", "\u8027", "\u804D", "\u8069", 
        "\u9878", "\u9880", "\u9883", "\u9889", "\u988C", "\u988F", "\u9894", "\u989A", "\u989B", "\u989E", 
        "\u989F", "\u98A1", "\u98A2", "\u98A6", "\u866C", "\u866E", "\u867F", "\u86AC", "\u86CE", "\u86CF", 
        "\u86F1", "\u86F2", "\u86F3", "\u86F4", "\u8748", "\u877E", "\u877C", "\u883C", "\u7F42", "\u7B03", 
        "\u7B15", "\u7B3E", "\u7B5A", "\u7B5D", "\u7BA6", "\u7BA7", "\u7BA8", "\u7BAA", "\u7BAB", "\u7BD1", 
        "\u7C16", "\u7C41", "\u8223", "\u823B", "\u8885", "\u7F9F", "\u7CC1", "\u7D77", "\u9EB8", "\u8DB1", 
        "\u917D", "\u917E", "\u9E7E", "\u8DB8", "\u8DC4", "\u8DDE", "\u8DF7", "\u8DF8", "\u8DF9", "\u8DFB", 
        "\u8E2C", "\u8E2F", "\u8E51", "\u8E52", "\u8E70", "\u8E8F", "\u8E9C", "\u89DE", "\u89EF", "\u9753", 
        "\u96F3", "\u9701", "\u972D", "\u9F80", "\u9F83", "\u9F85", "\u9F86", "\u9F87", "\u9F88", "\u9F89", 
        "\u9F8A", "\u9F8C", "\u9EFE", "\u9F0B", "\u9F0D", "\u96BD", "\u96E0", "\u92AE", "\u933E", "\u9C7F", 
        "\u9C82", "\u9C85", "\u9C88", "\u7A23", "\u9C8B", "\u9C8E", "\u9C90", "\u9C92", "\u9C94", "\u9C95", 
        "\u9C9A", "\u9C9B", "\u9C9E", "\u9C9F", "\u9CA0", "\u9CA1", "\u9CA2", "\u9CA3", "\u9CA5", "\u9CA6", 
        "\u9CA7", "\u9CA8", "\u9CA9", "\u9CAB", "\u9CAD", "\u9CAE", "\u9CB0", "\u9CB1", "\u9CB2", "\u9CB3", 
        "\u9CB5", "\u9CB6", "\u9CB7", "\u9CBB", "\u9CBD", "\u9CC4", "\u9CC5", "\u9CC6", "\u9CC7", "\u9CCC", 
        "\u9CCD", "\u9CCE", "\u9CCF", "\u9CD0", "\u9CD3", "\u9CD4", "\u9CD5", "\u9CD7", "\u9CDC", "\u9CDD", 
        "\u9CDF", "\u9CE2", "\u9791", "\u97AF", "\u9E58", "\u9AC5", "\u9ACB", "\u9ACC", "\u9B47", "\u9B49", 
        "\u98E8", "\u990D", "\u9B13", "\u9EBD", "\u9EE9", "\u9EEA", "\u9F39"
    };
    static String enc2[] = {
        "\u3001", "\uFF64", "\uFE52", "\267", "\u203E", "\u2025", "\u2500", "\u223C", "\u3014", "\uFE39", 
        "\u3015", "\uFE3A", "\u3009", "\uFE40", "\u300A", "\uFE3D", "\u300B", "\uFE3E", "\u300C", "\uFE41", 
        "\u300D", "\uFE42", "\u300E", "\uFE43", "\u300F", "\uFE44", "\u3010", "\uFE3B", "\u3011", "\uFE3C", 
        "\uFE30", "\u039B", "\u03A3", "\u03A0", "\u2609", "\u2252", "\u2266", "\u2267", "\u301E", "\uFF04", 
        "\uFE69", "\242", "\243", "\u2550", "\uFF01", "\uFE57", "\u301D", "\uFF03", "\uFE5F", "\uFF05", 
        "\uFE6A", "\uFF06", "\uFE60", "\u2032", "\uFF08", "\uFE35", "\uFE59", "\uFF09", "\uFE36", "\uFE5A", 
        "\uFF0A", "\uFE61", "\uFF0B", "\uFE62", "\uFF0C", "\uFE50", "\uFF0D", "\uFE63", "\uFF0E", "\u2022", 
        "\uFFFD", "\uFF1A", "\uFE55", "\uFE54", "\uFF1B", "\uFF1C", "\uFE64", "\uFF1D", "\uFE66", "\uFF1E", 
        "\uFE65", "\uFF1F", "\uFE56", "\uFF20", "\uFE6B", "\uFE5D", "\uFFFD", "\uFE5E", "\uFE3F", "\uFFFD", 
        "\uFF3F", "\u2035", "\uFE5B", "\uFF5B", "\uFE37", "\uFE31", "\uFF5C", "\uFE33", "\uFE5C", "\uFF5D", 
        "\uFE38", "\u203E", "\u769A", "\u85F9", "\u7919", "\u611B", "\u6697", "\u95C7", "\u9AAF", "\u6602", 
        "\u536C", "\u8956", "\u5967", "\u58E9", "\u7F77", "\u64FA", "\u6557", "\u9812", "\u677F", "\u95C6", 
        "\u8FA6", "\u7D46", "\u5E6B", "\u7D81", "\u938A", "\u8B17", "\u525D", "\u98FD", "\u5BF6", "\u5831", 
        "\u9B91", "\u8F29", "\u80CC", "\u63F9", "\u8C9D", "\u92C7", "\u72FD", "\u5099", "\u618A", "\u7E43", 
        "\u903C", "\u506A", "\u7B46", "\u7562", "\u6583", "\u5E63", "\u75FA", "\u9589", "\u8F9F", "\u95E2", 
        "\u908A", "\u7DE8", "\u8CB6", "\u6241", "\u8439", "\u7A28", "\u8B8A", "\u8FAF", "\u8FAE", "\u6A19", 
        "\u9C49", "\u5225", "\u765F", "\u7015", "\u6FF1", "\u8CD3", "\u64EF", "\u9905", "\u4E26", "\u5E76", 
        "\u4F75", "\u64A5", "\u7F3D", "\u9251", "\u99C1", "\u99EE", "\u535C", "\u8514", "\u54FA", "\u9914", 
        "\u88DC", "\u5E03", "\u4F48", "\u624D", "\u7E94", "\u8CA1", "\u63A1", "\u91C7", "\u5F69", "\u7DB5", 
        "\u53C3", "\u8836", "\u6B98", "\u615A", "\u6158", "\u71E6", "\u84BC", "\u8259", "\u5009", "\u6EC4", 
        "\u5EC1", "\u5074", "\u518A", "\u6E2C", "\u5C64", "\u8A6B", "\u6519", "\u647B", "\u87EC", "\u995E", 
        "\u8B92", "\u7E8F", "\u93DF", "\u5277", "\u7522", "\u95E1", "\u986B", "\u5834", "\u5617", "\u5690", 
        "\u9577", "\u511F", "\u8178", "\u5EE0", "\u66A2", "\u9214", "\u8ECA", "\u5FB9", "\u5875", "\u9673", 
        "\u896F", "\u6490", "\u7A31", "\u61F2", "\u6F84", "\u6F82", "\u8AA0", "\u9A01", "\u5403", "\u55AB", 
        "\u75F4", "\u7661", "\u9072", "\u99B3", "\u6065", "\u9F52", "\u71BE", "\u6C96", "\u885D", "\u866B", 
        "\u87F2", "\u5BF5", "\u7587", "\u8E8A", "\u7C4C", "\u7DA2", "\u4E11", "\u919C", "\u6AE5", "\u5EDA", 
        "\u92E4", "\u96DB", "\u790E", "\u5132", "\u89F8", "\u8655", "\u50B3", "\u7621", "\u95D6", "\u5275", 
        "\u9318", "\u7D14", "\u7DBD", "\u8FAD", "\u8A5E", "\u8CDC", "\u8070", "\u8525", "\u56EA", "\u5F9E", 
        "\u53E2", "\u6E4A", "\u8EA5", "\u7AC4", "\u932F", "\u9054", "\u5446", "\u7343", "\u5E36", "\u8CB8", 
        "\u64D4", "\u55AE", "\u9132", "\u64A3", "\u81BD", "\u619A", "\u8A95", "\u5F48", "\u7576", "\u64CB", 
        "\u9EE8", "\u8569", "\u6A94", "\u6417", "\u5CF6", "\u79B1", "\u5C0E", "\u76DC", "\u71C8", "\u9127", 
        "\u5824", "\u9684", "\u6575", "\u6ECC", "\u905E", "\u7DE0", "\u985B", "\u9EDE", "\u588A", "\u96FB", 
        "\u6FB1", "\u96D5", "\u5F6B", "\u9D70", "\u540A", "\u5F14", "\u91E3", "\u8ABF", "\u8ADC", "\u758A", 
        "\u91D8", "\u9802", "\u9320", "\u8A02", "\u4E1F", "\u6771", "\u52D5", "\u68DF", "\u51CD", "\u6597", 
        "\u9B25", "\u8C46", "\u8373", "\u72A2", "\u7368", "\u8B80", "\u8CED", "\u934D", "\u935B", "\u65B7", 
        "\u7DDE", "\u514C", "\u968A", "\u5C0D", "\u5678", "\u6566", "\u60C7", "\u9813", "\u920D", "\u596A", 
        "\u58AE", "\u9D5D", "\u984D", "\u8A1B", "\u60E1", "\u5641", "\u9913", "\u5152", "\u513F", "\u723E", 
        "\u990C", "\u8CB3", "\u767C", "\u9AEE", "\u7F70", "\u95A5", "\u743A", "\u792C", "\u91E9", "\u7169", 
        "\u8CA9", "\u98EF", "\u6CDB", "\u6C4E", "\u4EFF", "\u5023", "\u8A2A", "\u7D21", "\u98DB", "\u8AB9", 
        "\u5EE2", "\u8CBB", "\u7D1B", "\u58B3", "\u596E", "\u61A4", "\u7CDE", "\u8C50", "\u4E30", "\u6953", 
        "\u92D2", "\u98A8", "\u760B", "\u99AE", "\u7E2B", "\u8AF7", "\u9CF3", "\u4F5B", "\u5F7F", "\u592B", 
        "\u4F15", "\u819A", "\u8F3B", "\u64AB", "\u8F14", "\u8CE6", "\u5FA9", "\u8907", "\u8CA0", "\u8A03", 
        "\u5A66", "\u7E1B", "\u8A72", "\u9223", "\u84CB", "\u5E72", "\u5E79", "\u6746", "\u687F", "\u8D95", 
        "\u7A08", "\u8D1B", "\u5CA1", "\u525B", "\u92FC", "\u7DB1", "\u5D17", "\u93AC", "\u64F1", "\u9D3F", 
        "\u95A3", "\u927B", "\u500B", "\u7D66", "\u9F94", "\u5BAE", "\u978F", "\u8CA2", "\u9264", "\u6E9D", 
        "\u69CB", "\u8CFC", "\u5920", "\u8831", "\u8C37", "\u7A40", "\u9867", "\u96C7", "\u50F1", "\u522E", 
        "\u98B3", "\u526E", "\u6302", "\u639B", "\u95DC", "\u89C0", "\u9928", "\u6163", "\u8CAB", "\u5EE3", 
        "\u898F", "\u6B78", "\u9F9C", "\u95A8", "\u8ECC", "\u8A6D", "\u6AC3", "\u67DC", "\u8CB4", "\u528A", 
        "\u8F25", "\u6EFE", "\u934B", "\u570B", "\u904E", "\u99ED", "\u97D3", "\u710A", "\u92B2", "\u6F22", 
        "\u865F", "\u95A1", "\u9DB4", "\u8CC0", "\u6A6B", "\u6046", "\u8F5F", "\u54C4", "\u9B28", "\u9D3B", 
        "\u7D05", "\u58FA", "\u80E1", "\u9B0D", "\u8B77", "\u6EEC", "\u6236", "\u5629", "\u8B41", "\u83EF", 
        "\u756B", "\u5283", "\u5212", "\u8A71", "\u61F7", "\u58DE", "\u574F", "\u6B61", "\u74B0", "\u9084", 
        "\u7DE9", "\u63DB", "\u559A", "\u7613", "\u7165", "\u6E19", "\u9EC3", "\u8B0A", "\u63EE", "\u8F1D", 
        "\u6BC0", "\u71EC", "\u8B6D", "\u8CC4", "\u7A62", "\u6703", "\u71F4", "\u532F", "\u5F59", "\u8AF1", 
        "\u8AA8", "\u7E6A", "\u8477", "\u6E3E", "\u7372", "\u7A6B", "\u8CA8", "\u798D", "\u64CA", "\u6A5F", 
        "\u7A4D", "\u98E2", "\u9951", "\u8DE1", "\u8E5F", "\u8B4F", "\u96DE", "\u7E3E", "\u52E3", "\u7DDD", 
        "\u6975", "\u8F2F", "\u7D1A", "\u64E0", "\u5E7E", "\u51E0", "\u858A", "\u5291", "\u6FDF", "\u8A08", 
        "\u8A18", "\u969B", "\u7E7C", "\u7D00", "\u593E", "\u5BB6", "\u50A2", "\u83A2", "\u9830", "\u8CC8", 
        "\u9240", "\u50F9", "\u99D5", "\u6BB2", "\u76E3", "\u5805", "\u7B8B", "\u9593", "\u8271", "\u5978", 
        "\u59E6", "\u7DD8", "\u7E6D", "\u6AA2", "\u9E7C", "\u9E7C", "\u63C0", "\u64BF", "\u7C21", "\u5109", 
        "\u6E1B", "\u85A6", "\u8350", "\u6ABB", "\u9452", "\u8E10", "\u8CE4", "\u898B", "\u9375", "\u8266", 
        "\u528D", "\u991E", "\u6F38", "\u6FFA", "\u6F97", "\u50F5", "\u6BAD", "\u59DC", "\u8591", "\u5C07", 
        "\u6F3F", "\u8523", "\u69F3", "\u734E", "\u8B1B", "\u91AC", "\u81A0", "\u6F86", "\u9A55", "\u5B0C", 
        "\u652A", "\u9278", "\u77EF", "\u50E5", "\u8173", "\u9903", "\u7E73", "\u7D5E", "\u8F4E", "\u8F03", 
        "\u968E", "\u7BC0", "\u6770", "\u5091", "\u6F54", "\u7D50", "\u8AA1", "\u5C46", "\u7DCA", "\u9326", 
        "\u50C5", "\u8B39", "\u9032", "\u6649", "\u71FC", "\u76E1", "\u5118", "\u52C1", "\u834A", "\u8396", 
        "\u9BE8", "\u9A5A", "\u7D93", "\u9838", "\u975C", "\u93E1", "\u5F91", "\u75D9", "\u7AF6", "\u6DE8", 
        "\u51C8", "\u7CFE", "\u5EC4", "\u820A", "\u99D2", "\u5C40", "\u4FB7", "\u8209", "\u64DA", "\u92F8", 
        "\u61FC", "\u5287", "\u9D51", "\u5377", "\u6372", "\u7D79", "\u89BA", "\u6C7A", "\u8A23", "\u7D55", 
        "\u921E", "\u8ECD", "\u99FF", "\u958B", "\u51F1", "\u9846", "\u6BBC", "\u514B", "\u524B", "\u8AB2", 
        "\u58BE", "\u61C7", "\u6473", "\u6263", "\u91E6", "\u5EAB", "\u8932", "\u5938", "\u8A87", "\u584A", 
        "\u5108", "\u5BEC", "\u7926", "\u66E0", "\u6CC1", "\u8667", "\u5DCB", "\u7ABA", "\u994B", "\u6F70", 
        "\u6606", "\u5D11", "\u56F0", "\u774F", "\u7D91", "\u64F4", "\u95CA", "\u881F", "\u81D8", "\u840A", 
        "\u4F86", "\u8CF4", "\u85CD", "\u6B04", "\u6514", "\u7C43", "\u95CC", "\u862D", "\u703E", "\u8B95", 
        "\u652C", "\u89BD", "\u61F6", "\u7E9C", "\u721B", "\u6FEB", "\u7405", "\u746F", "\u6488", "\u52DE", 
        "\u6F87", "\u6A02", "\u9433", "\u58D8", "\u985E", "\u6DDA", "\u7C6C", "\u96E2", "\u88E1", "\u88CF", 
        "\u91CC", "\u9BC9", "\u79AE", "\u6817", "\u6144", "\u9E97", "\u53B2", "\u52F5", "\u792B", "\u6B77", 
        "\u66C6", "\u701D", "\u96B8", "\u5006", "\u806F", "\u84EE", "\u9023", "\u69E4", "\u942E", "\u6190", 
        "\u6F23", "\u6582", "\u81C9", "\u93C8", "\u6200", "\u7149", "\u934A", "\u7DF4", "\u7CE7", "\u6DBC", 
        "\u6881", "\u6A11", "\u5169", "\u8F1B", "\u8AD2", "\u7642", "\u907C", "\u4E86", "\u77AD", "\u9410", 
        "\u7375", "\u81E8", "\u9130", "\u9C57", "\u51DC", "\u8CC3", "\u9F61", "\u9234", "\u9748", "\u5DBA", 
        "\u9818", "\u993E", "\u5289", "\u9F8D", "\u807E", "\u56A8", "\u7C60", "\u58DF", "\u650F", "\u96B4", 
        "\u6A13", "\u5A41", "\u645F", "\u7C0D", "\u8606", "\u76E7", "\u9871", "\u5EEC", "\u7210", "\u64C4", 
        "\u9E75", "\u6EF7", "\u865C", "\u9B6F", "\u8CC2", "\u797F", "\u9304", "\u9678", "\u9A62", "\u5442", 
        "\u92C1", "\u4FB6", "\u5C62", "\u7E37", "\u616E", "\u6FFE", "\u7DA0", "\u5DD2", "\u6523", "\u5B7F", 
        "\u7064", "\u4E82", "\u6384", "\u8F2A", "\u502B", "\u4F96", "\u5D19", "\u6DEA", "\u7DB8", "\u8AD6", 
        "\u863F", "\u7F85", "\u56C9", "\u908F", "\u947C", "\u7C6E", "\u9A3E", "\u99F1", "\u7D61", "\u5ABD", 
        "\u746A", "\u78BC", "\u879E", "\u99AC", "\u7F75", "\u55CE", "\u8CB7", "\u9EA5", "\u8CE3", "\u9081", 
        "\u8108", "\u779E", "\u9945", "\u883B", "\u6EFF", "\u8B3E", "\u8C93", "\u9328", "\u925A", "\u8CBF", 
        "\u9EBC", "\u4E48", "\u6C92", "\u9382", "\u9580", "\u60B6", "\u5011", "\u8499", "\u6FDB", "\u77C7", 
        "\u9333", "\u5922", "\u7787", "\u8B0E", "\u5F4C", "\u7030", "\u79D8", "\u7955", "\u8993", "\u51AA", 
        "\u7DBF", "\u7DEC", "\u9762", "\u9EB5", "\u5EDF", "\u6EC5", "\u61AB", "\u95A9", "\u9CF4", "\u9298", 
        "\u8B2C", "\u8B00", "\u755D", "\u5436", "\u9209", "\u7D0D", "\u96E3", "\u6493", "\u8166", "\u60F1", 
        "\u9B27", "\u9912", "\u5167", "\u64EC", "\u81A9", "\u6506", "\u637B", "\u649A", "\u5FF5", "\u5538", 
        "\u5A18", "\u5B43", "\u91C0", "\u9CE5", "\u8076", "\u5699", "\u9477", "\u93B3", "\u6AB8", "\u7370", 
        "\u5BE7", "\u64F0", "\u6FD8", "\u9215", "\u7D10", "\u81BF", "\u6FC3", "\u8FB2", "\u7627", "\u8AFE", 
        "\u6B50", "\u9DD7", "\u6BC6", "\u5614", "\u6F1A", "\u76E4", "\u69C3", "\u9F90", "\u62CB", "\u5228", 
        "\u924B", "\u70AE", "\u7832", "\u8CE0", "\u4F69", "\u73EE", "\u5674", "\u9D6C", "\u9A19", "\u98C4", 
        "\u983B", "\u8CA7", "\u860B", "\u6191", "\u8A55", "\u6F51", "\u9817", "\u6251", "\u64B2", "\u92EA", 
        "\u8216", "\u4EC6", "\u50D5", "\u8B5C", "\u68F2", "\u621A", "\u617C", "\u6DD2", "\u60BD", "\u81CD", 
        "\u9F4A", "\u9A0E", "\u8C48", "\u555F", "\u6C23", "\u68C4", "\u8A16", "\u727D", "\u925B", "\u5343", 
        "\u97C6", "\u9077", "\u7C3D", "\u7C64", "\u8B19", "\u9322", "\u9257", "\u6F5B", "\u6DFA", "\u8B74", 
        "\u5879", "\u69CD", "\u9397", "\u55C6", "\u7246", "\u8594", "\u5F37", "\u6436", "\u936C", "\u6A4B", 
        "\u55AC", "\u50D1", "\u7FF9", "\u7AC5", "\u7ACA", "\u6B3D", "\u89AA", "\u5BE2", "\u8F15", "\u6C2B", 
        "\u50BE", "\u9803", "\u8ACB", "\u6176", "\u74CA", "\u7AAE", "\u79CB", "\u97A6", "\u4E18", "\u5775", 
        "\u8DA8", "\u5340", "\u8EC0", "\u9A45", "\u9F72", "\u9874", "\u6B0A", "\u52F8", "\u537B", "\u9D72", 
        "\u78BA", "\u8B93", "\u9952", "\u64FE", "\u7E5E", "\u71B1", "\u97CC", "\u8A8D", "\u7D09", "\u69AE", 
        "\u7D68", "\u8EDF", "\u92B3", "\u958F", "\u6F64", "\u85A9", "\u9C13", "\u8CFD", "\u4E09", "\u5098", 
        "\u55AA", "\u9A37", "\u6383", "\u6F80", "\u6BBA", "\u524E", "\u7D17", "\u7BE9", "\u6652", "\u66EC", 
        "\u522A", "\u9583", "\u965D", "\u8D0D", "\u7E55", "\u50B7", "\u8CDE", "\u71D2", "\u7D39", "\u8CD2", 
        "\u820D", "\u6368", "\u651D", "\u61FE", "\u8A2D", "\u7D33", "\u5BE9", "\u5B38", "\u814E", "\u6EF2", 
        "\u8072", "\u5347", "\u6607", "\u965E", "\u7E69", "\u52DD", "\u8056", "\u5E2B", "\u7345", "\u6FD5", 
        "\u8A69", "\u5C38", "\u5C4D", "\u6642", "\u8755", "\u5BE6", "\u8B58", "\u99DB", "\u52E2", "\u9069", 
        "\u91CB", "\u98FE", "\u8996", "\u8A66", "\u58FD", "\u7378", "\u6A1E", "\u8F38", "\u66F8", "\u8D16", 
        "\u5C6C", "\u8853", "\u672E", "\u6A39", "\u8C4E", "\u6578", "\u5E25", "\u96D9", "\u8AB0", "\u7A05", 
        "\u9806", "\u8AAA", "\u78A9", "\u720D", "\u7D72", "\u98FC", "\u9B06", "\u677E", "\u8073", "\u616B", 
        "\u980C", "\u8A1F", "\u8AA6", "\u64FB", "\u8607", "\u7526", "\u56CC", "\u8A34", "\u8085", "\u96D6", 
        "\u96A8", "\u7D8F", "\u6B72", "\u5B6B", "\u640D", "\u7B4D", "\u7E2E", "\u7463", "\u9396", "\u737A", 
        "\u64BB", "\u614B", "\u6524", "\u8CAA", "\u7671", "\u7058", "\u58C7", "\u8B5A", "\u8AC7", "\u5606", 
        "\u6B4E", "\u6E6F", "\u71D9", "\u638F", "\u642F", "\u6FE4", "\u7D5B", "\u9676", "\u530B", "\u8A0E", 
        "\u9A30", "\u8B04", "\u92BB", "\u984C", "\u9AD4", "\u5243", "\u8599", "\u5C5C", "\u689D", "\u8CBC", 
        "\u9435", "\u5EF3", "\u807D", "\u70F4", "\u9285", "\u7D71", "\u982D", "\u79BF", "\u5716", "\u6D82", 
        "\u5857", "\u5718", "\u7CF0", "\u9839", "\u86FB", "\u6258", "\u8A17", "\u812B", "\u9D15", "\u99B1", 
        "\u99DD", "\u6A62", "\u7AAA", "\u896A", "\u5F4E", "\u7063", "\u9811", "\u633D", "\u8F13", "\u842C", 
        "\u7DB2", "\u97CB", "\u9055", "\u570D", "\u70BA", "\u6FF0", "\u7DAD", "\u8466", "\u5049", "\u507D", 
        "\u7DEF", "\u5582", "\u9935", "\u8B02", "\u885B", "\u6EAB", "\u805E", "\u7D0B", "\u7A69", "\u554F", 
        "\u64BE", "\u8778", "\u6E26", "\u7AA9", "\u81E5", "\u55DA", "\u93A2", "\u70CF", "\u6C61", "\u6C59", 
        "\u8AA3", "\u7121", "\u856A", "\u5433", "\u6342", "\u6440", "\u5862", "\u9727", "\u52D9", "\u8AA4", 
        "\u932B", "\u72A7", "\u6EAA", "\u8C3F", "\u8972", "\u5E2D", "\u84C6", "\u7FD2", "\u9291", "\u7CFB", 
        "\u4FC2", "\u7E6B", "\u6232", "\u7D30", "\u8766", "\u8F44", "\u5CFD", "\u4FE0", "\u72F9", "\u5EC8", 
        "\u5687", "\u4ED9", "\u50CA", "\u9BAE", "\u7E96", "\u7E34", "\u54B8", "\u9E79", "\u8CE2", "\u929C", 
        "\u5563", "\u9591", "\u5F26", "\u7D43", "\u986F", "\u96AA", "\u73FE", "\u737B", "\u7E23", "\u9921", 
        "\u7FA8", "\u61B2", "\u7DDA", "\u5EC2", "\u9472", "\u9109", "\u8A73", "\u97FF", "\u9805", "\u5411", 
        "\u56AE", "\u856D", "\u56C2", "\u92B7", "\u66C9", "\u562F", "\u6548", "\u509A", "\u880D", "\u5354", 
        "\u633E", "\u651C", "\u8105", "\u8AE7", "\u5BEB", "\u7009", "\u8B1D", "\u92C5", "\u6B23", "\u8A22", 
        "\u820B", "\u8208", "\u5E78", "\u5016", "\u51F6", "\u5147", "\u6D36", "\u5FF7", "\u605F", "\u93FD", 
        "\u7E61", "\u865B", "\u5653", "\u9808", "\u9B1A", "\u8A31", "\u6558", "\u6064", "\u5379", "\u7DD2", 
        "\u7E8C", "\u8ED2", "\u55A7", "\u8AE0", "\u61F8", "\u9078", "\u766C", "\u7D62", "\u5B78", "\u52DB", 
        "\u52F3", "\u718F", "\u71FB", "\u8A62", "\u5C0B", "\u99B4", "\u8A13", "\u8A0A", "\u905C", "\u58D3", 
        "\u9D09", "\u9D28", "\u555E", "\u4E9E", "\u8A1D", "\u95B9", "\u7159", "\u9E7D", "\u56B4", "\u5CA9", 
        "\u5DD6", "\u984F", "\u95BB", "\u8277", "\u53AD", "\u786F", "\u5F65", "\u7130", "\u71C4", "\u5BB4", 
        "\u8B8C", "\u8AFA", "\u9A57", "\u9D26", "\u694A", "\u63DA", "\u760D", "\u967D", "\u990A", "\u6A23", 
        "\u7464", "\u6416", "\u582F", "\u9059", "\u7AAF", "\u8B20", "\u85E5", "\u723A", "\u9801", "\u696D", 
        "\u8449", "\u91AB", "\u92A5", "\u9824", "\u907A", "\u5100", "\u87FB", "\u85DD", "\u5104", "\u61B6", 
        "\u7FA9", "\u8A63", "\u8B70", "\u8ABC", "\u8B6F", "\u7570", "\u7E79", "\u852D", "\u9670", "\u9280", 
        "\u98F2", "\u96B1", "\u6AFB", "\u5B30", "\u9DF9", "\u61C9", "\u7E93", "\u7469", "\u87A2", "\u71DF", 
        "\u7192", "\u8805", "\u8D0F", "\u7A4E", "\u55B2", "\u64C1", "\u7670", "\u8E34", "\u8E0A", "\u8A60", 
        "\u6D8C", "\u6E67", "\u512A", "\u6182", "\u90F5", "\u923E", "\u7336", "\u6E38", "\u904A", "\u4F51", 
        "\u7950", "\u8A98", "\u65BC", "\u4E8E", "\u8F3F", "\u903E", "\u8E30", "\u9B5A", "\u6F01", "\u5A1B", 
        "\u8207", "\u5DBC", "\u8A9E", "\u90C1", "\u9B31", "\u5401", "\u7C72", "\u5FA1", "\u79A6", "\u6108", 
        "\u7652", "\u6B32", "\u617E", "\u7344", "\u8B7D", "\u9810", "\u99AD", "\u9D1B", "\u6DF5", "\u8F45", 
        "\u5712", "\u54E1", "\u5713", "\u7DE3", "\u9060", "\u9858", "\u613F", "\u7D04", "\u8E8D", "\u9470", 
        "\u5CB3", "\u5DBD", "\u7CB5", "\u6085", "\u95B1", "\u96F2", "\u4E91", "\u9116", "\u52FB", "\u9695", 
        "\u904B", "\u860A", "\u919E", "\u6688", "\u97FB", "\u96DC", "\u707D", "\u8F09", "\u6522", "\u66AB", 
        "\u8D0A", "\u8B9A", "\u8D13", "\u81DF", "\u9AD2", "\u7CDF", "\u8E67", "\u947F", "\u68D7", "\u566A", 
        "\u8B5F", "\u8CAC", "\u64C7", "\u5247", "\u6FA4", "\u8CCA", "\u8D08", "\u624E", "\u7D2E", "\u672D", 
        "\u5284", "\u8ECB", "\u9358", "\u9598", "\u67F5", "\u8A50", "\u9F4B", "\u50B5", "\u6C08", "\u6CBE", 
        "\u9711", "\u76DE", "\u9186", "\u65AC", "\u8F3E", "\u5D84", "\u68E7", "\u4F54", "\u5360", "\u6230", 
        "\u7DBB", "\u5F35", "\u6F32", "\u5E33", "\u8CEC", "\u8139", "\u8D99", "\u87C4", "\u8F4D", "\u937A", 
        "\u9019", "\u8C9E", "\u91DD", "\u937C", "\u5075", "\u8A3A", "\u93AE", "\u9663", "\u6399", "\u775C", 
        "\u7319", "\u722D", "\u5E40", "\u912D", "\u8A3C", "\u8B49", "\u7E54", "\u8077", "\u57F7", "\u4F84", 
        "\u59EA", "\u96BB", "\u53EA", "\u7947", "\u7D19", "\u5FD7", "\u8A8C", "\u646F", "\u64F2", "\u81F4", 
        "\u7DFB", "\u5E5F", "\u5236", "\u88FD", "\u8CEA", "\u6EEF", "\u9418", "\u7D42", "\u7A2E", "\u816B", 
        "\u773E", "\u5468", "\u9031", "\u8CD9", "\u8B05", "\u8EF8", "\u76BA", "\u665D", "\u9A5F", "\u6731", 
        "\u7843", "\u8C6C", "\u8AF8", "\u8A85", "\u71ED", "\u77DA", "\u56D1", "\u8CAF", "\u9444", "\u7B51", 
        "\u7BC9", "\u6CE8", "\u8A3B", "\u99D0", "\u5C08", "\u8011", "\u78DA", "\u8F49", "\u64B0", "\u8B54", 
        "\u8CFA", "\u6A01", "\u5E84", "\u838A", "\u88DD", "\u599D", "\u58EF", "\u72C0", "\u9310", "\u8D05", 
        "\u589C", "\u7DB4", "\u8AC4", "\u51C6", "\u6E96", "\u8457", "\u6FC1", "\u8332", "\u8CC7", "\u6F2C", 
        "\u8E64", "\u7D9C", "\u7E3D", "\u7E31", "\u9112", "\u8A5B", "\u7D44", "\u947D", "\u4E99", "\u776A", 
        "\u7F8B", "\u55C7", "\u5399", "\u53B4", "\u9768", "\u8D17", "\u532D", "\u5331", "\u533E", "\u6944", 
        "\u8CFE", "\u5244", "\u528C", "\u5274", "\u50B4", "\u5000", "\u5096", "\u4F47", "\u5115", "\u5102", 
        "\u5114", "\u513C", "\u5137", "\u4FC1", "\u50E8", "\u50AF", "\u50C2", "\u513B", "\u5110", "\u513A", 
        "\u6C46", "\u50C9", "\u7CF4", "\u9ECC", "\u56C5", "\u9CE7", "\u5157", "\u889E", "\u893B", "\u81E0", 
        "\u7A1F", "\u585A", "\u8A10", "\u8A0C", "\u8A15", "\u8B33", "\u8A4E", "\u8A25", "\u8A41", "\u8A36", 
        "\u8A46", "\u8A54", "\u8A52", "\u8A86", "\u8A84", "\u8A7F", "\u8A70", "\u8A7C", "\u8A75", "\u8A6C", 
        "\u8A6E", "\u8ACD", "\u8AE2", "\u8A61", "\u8A9A", "\u8AA5", "\u8A91", "\u8A92", "\u8ACF", "\u8AD1", 
        "\u8AC9", "\u8ADB", "\u8AD7", "\u8AC2", "\u8AB6", "\u8AF6", "\u8AEB", "\u8B14", "\u8B01", "\u8AE4", 
        "\u8AED", "\u8AFC", "\u8AF3", "\u8AE6", "\u8AEE", "\u8ADE", "\u8B28", "\u8B9C", "\u8B16", "\u8B1A", 
        "\u8B10", "\u8B2B", "\u8B7E", "\u8B56", "\u8B59", "\u8B4E", "\u8B9E", "\u8B6B", "\u8B96", "\u5DF9", 
        "\u9658", "\u9689", "\u913A", "\u9114", "\u9134", "\u90DF", "\u9136", "\u9106", "\u9148", "\u82BB", 
        "\u5950", "\u52F1", "\u80C7", "\u580A", "\u58D9", "\u58E2", "\u58DA", "\u57E1", "\u584F", "\u5852", 
        "\u581D", "\u5864", "\u858C", "\u85F6", "\u83A7", "\u8407", "\u84EF", "\u82E7", "\u8622", "\u8526", 
        "\u584B", "\u7162", "\u8558", "\u84FD", "\u854E", "\u8588", "\u85BA", "\u7296", "\u6ECE", "\u85CE", 
        "\u84C0", "\u8452", "\u8494", "\u8435", "\u849E", "\u8555", "\u9DAF", "\u7E08", "\u8546", "\u8562", 
        "\u851E", "\u9A40", "\u863A", "\u8577", "\u861E", "\u85FA", "\u8604", "\u85EA", "\u861A", "\u5969", 
        "\u5C37", "\u636B", "\u6476", "\u649F", "\u6451", "\u645C", "\u64B3", "\u6504", "\u6990", "\u6516", 
        "\u64F7", "\u64FC", "\u651B", "\u5F12", "\u5630", "\u5638", "\u56C8", "\u56A6", "\u5504", "\u5680", 
        "\u5660", "\u5635", "\u55F6", "\u5666", "\u5672", "\u568C", "\u5665", "\u561C", "\u562E", "\u55E9", 
        "\u5616", "\u56C0", "\u5555", "\u54B7", "\u560D", "\u56B3", "\u55C9", "\u8186", "\u56C1", "\u566F", 
        "\u8F61", "\u56B6", "\u5695", "\u5707", "\u5E43", "\u5E6C", "\u5E58", "\u5E57", "\u5D87", "\u5CF4", 
        "\u5D50", "\u5DA7", "\u5DA0", "\u5D22", "\u5D97", "\u5D0D", "\u5DB8", "\u5D33", "\u5D81", "\u5DD4", 
        "\u5F87", "\u4F9A", "\u5FA0", "\u7377", "\u736A", "\u733B", "\u736B", "\u7380", "\u737C", "\u9933", 
        "\u98E9", "\u993C", "\u98EA", "\u98EB", "\u98ED", "\u98F4", "\u9909", "\u995F", "\u9911", "\u9918", 
        "\u991B", "\u993F", "\u9943", "\u9948", "\u9949", "\u994C", "\u5EE1", "\u8CE1", "\u5EE9", "\u61FA", 
        "\u61AE", "\u616A", "\u613E", "\u60B5", "\u6134", "\u61CC", "\u615F", "\u61E8", "\u60FB", "\u6137", 
        "\u60F2", "\u6173", "\u611C", "\u614D", "\u6192", "\u61CD", "\u9582", "\u9586", "\u95C8", "\u958E", 
        "\u9594", "\u958C", "\u95E5", "\u95AD", "\u95AB", "\u9B2E", "\u95AC", "\u95BE", "\u95B6", "\u95BF", 
        "\u95BD", "\u95BC", "\u95C3", "\u95CB", "\u95D4", "\u95A4", "\u95D0", "\u95D5", "\u95DE", "\u7043", 
        "\u6E88", "\u7027", "\u7018", "\u6FFC", "\u6D87", "\u6D79", "\u6E5E", "\u6FAE", "\u700F", "\u6EF8", 
        "\u6F6F", "\u6DF6", "\u6F7F", "\u7006", "\u6FA0", "\u700B", "\u6DE5", "\u6F35", "\u7069", "\u7044", 
        "\u7005", "\u6F77", "\u7020", "\u701F", "\u7032", "\u7026", "\u7028", "\u705D", "\u9A2B", "\u9087", 
        "\u9015", "\u9090", "\u5C68", "\u5F33", "\u5AF5", "\u5AD7", "\u5AAF", "\u59CD", "\u5A6D", "\u5B08", 
        "\u5B4C", "\u5AA7", "\u5AFB", "\u5B0B", "\u5ABC", "\u5B21", "\u5B2A", "\u5B19", "\u5B24", "\u99D4", 
        "\u99DF", "\u99D9", "\u9A36", "\u9A5B", "\u99D1", "\u99D8", "\u9A4D", "\u9A4A", "\u99E2", "\u9A6A", 
        "\u9A0F", "\u9A0D", "\u9A05", "\u9A42", "\u9A2D", "\u9A16", "\u9A41", "\u9A2E", "\u9A38", "\u9A43", 
        "\u9A44", "\u9A4F", "\u9A65", "\u9A64", "\u7D06", "\u7D02", "\u7D07", "\u7D08", "\u7E8A", "\u7D1C", 
        "\u7D15", "\u7D13", "\u7D3A", "\u7D32", "\u7D31", "\u7E10", "\u7D3C", "\u7D40", "\u7D4E", "\u7D73", 
        "\u7D86", "\u7D83", "\u7D88", "\u7DBE", "\u7DBA", "\u7DCB", "\u7DC4", "\u7D9E", "\u7DAC", "\u7DB9", 
        "\u7DA3", "\u7DB0", "\u7DC7", "\u7DD9", "\u7DD7", "\u7DF9", "\u7DF2", "\u7E62", "\u7DE6", "\u7DF6", 
        "\u7DF1", "\u7E0B", "\u7DE1", "\u7E09", "\u7E1D", "\u7E1F", "\u7E1E", "\u7E2D", "\u7E0A", "\u7E11", 
        "\u7E7D", "\u7E39", "\u7E35", "\u7E32", "\u7E46", "\u7E45", "\u7E88", "\u7E5A", "\u7E52", "\u7E7E", 
        "\u7E70", "\u7E6F", "\u7E98", "\u74A3", "\u744B", "\u73A8", "\u74CF", "\u980A", "\u74BD", "\u743F", 
        "\u7489", "\u74A6", "\u74D4", "\u74DA", "\u97D9", "\u97DE", "\u97DC", "\u69AA", "\u6AEA", "\u68D6", 
        "\u6A05", "\u689F", "\u6ADB", "\u6AF3", "\u6AE8", "\u6894", "\u6ADF", "\u6A89", "\u690F", "\u6A48", 
        "\u6968", "\u69BF", "\u6A3A", "\u6A9C", "\u6B12", "\u6AFA", "\u6ADD", "\u69E7", "\u6B0F", "\u69E8", 
        "\u6B16", "\u6AEC", "\u6ADA", "\u6AF8", "\u6AB3", "\u6AE7", "\u6AA3", "\u6AEB", "\u6AD3", "\u6ADE", 
        "\u6A90", "\u7C37", "\u6A81", "\u6B7F", "\u6BA4", "\u6B9E", "\u6BAE", "\u6BAB", "\u6BAF", "\u8ED4", 
        "\u8EDB", "\u8EFB", "\u8F64", "\u8EF9", "\u8EFC", "\u8EEB", "\u8F62", "\u8EFA", "\u8EFE", "\u8F0A", 
        "\u8F07", "\u8F05", "\u8F12", "\u8F26", "\u8F1E", "\u8F1F", "\u8F1C", "\u8F33", "\u8F46", "\u8F54", 
        "\u6214", "\u6227", "\u6229", "\u750C", "\u66C7", "\u66C4", "\u6689", "\u66D6", "\u8CC1", "\u8CB0", 
        "\u8CBA", "\u8CBD", "\u8D04", "\u8CB2", "\u8CC5", "\u8D10", "\u8CD1", "\u8CDA", "\u8CD5", "\u8CE7", 
        "\u8CFB", "\u8998", "\u89AC", "\u89A1", "\u89BF", "\u89A6", "\u89AF", "\u89B2", "\u89B7", "\u6BFF", 
        "\u6C0C", "\u6C2C", "\u6C33", "\u7258", "\u80B4", "\u991A", "\u6BBD", "\u6727", "\u77D3", "\u81DA", 
        "\u5191", "\u811B", "\u81BE", "\u8161", "\u814C", "\u9183", "\u8183", "\u81CF", "\u6B5F", "\u98AE", 
        "\u98AF", "\u98B6", "\u98BC", "\u98C6", "\u8F42", "\u9F4F", "\u6595", "\u716C", "\u7152", "\u71C9", 
        "\u70AB", "\u8852", "\u71C1", "\u71DC", "\u71FE", "\u6AB7", "\u798E", "\u79AA", "\u61DF", "\u6128", 
        "\u61E3", "\u6207", "\u6FA9", "\u78EF", "\u78AD", "\u7868", "\u792A", "\u7931", "\u7864", "\u78FD", 
        "\u78E7", "\u78E3", "\u7921", "\u9F95", "\u775E", "\u77BC", "\u756C", "\u7F86", "\u7F88", "\u91D3", 
        "\u91D4", "\u91D9", "\u91D7", "\u91D5", "\u91F7", "\u91E7", "\u91E4", "\u9346", "\u91F5", "\u91F9", 
        "\u9226", "\u9245", "\u9211", "\u9210", "\u9201", "\u9227", "\u9204", "\u9225", "\u9200", "\u923A", 
        "\u9266", "\u9237", "\u9233", "\u923D", "\u9238", "\u925E", "\u926C", "\u926D", "\u923F", "\u9460", 
        "\u9230", "\u9249", "\u9248", "\u924D", "\u922E", "\u9239", "\u9438", "\u92AC", "\u92A0", "\u927A", 
        "\u92AA", "\u92EE", "\u92CF", "\u9403", "\u943A", "\u92A6", "\u93A7", "\u9296", "\u92CC", "\u92A9", 
        "\u93F5", "\u9293", "\u927F", "\u93A9", "\u929A", "\u931A", "\u92AB", "\u9283", "\u940B", "\u92A8", 
        "\u92A3", "\u9412", "\u9338", "\u92F1", "\u93D7", "\u92F0", "\u92EF", "\u92E8", "\u92BC", "\u5249", 
        "\u92DD", "\u92C3", "\u92DF", "\u92E6", "\u9312", "\u9306", "\u931B", "\u9301", "\u9315", "\u932E", 
        "\u9308", "\u931F", "\u9319", "\u9365", "\u9347", "\u9376", "\u9354", "\u9364", "\u93AA", "\u9370", 
        "\u93E4", "\u93D8", "\u93CC", "\u9398", "\u942B", "\u93A6", "\u93B0", "\u93B5", "\u944C", "\u93E2", 
        "\u93DC", "\u93DD", "\u93CD", "\u93DE", "\u93C3", "\u93C7", "\u93D1", "\u9414", "\u93F7", "\u9413", 
        "\u946D", "\u9420", "\u93F9", "\u9419", "\u944A", "\u9432", "\u943F", "\u9463", "\u937E", "\u7A61", 
        "\u9CE9", "\u9CF6", "\u9D07", "\u9D06", "\u9D23", "\u9D87", "\u9E15", "\u9D1D", "\u9D1F", "\u9DE5", 
        "\u9D2F", "\u9DD9", "\u9D30", "\u9D42", "\u9E1E", "\u9D53", "\u9E1D", "\u9D60", "\u9D52", "\u9DF4", 
        "\u9D5C", "\u9D61", "\u9D6A", "\u9D6F", "\u9D89", "\u9D98", "\u9D9A", "\u9DC2", "\u9DBC", "\u9E1A", 
        "\u9DD3", "\u9DDA", "\u9DEF", "\u9DE6", "\u9DF2", "\u9DF8", "\u9DFA", "\u9E1B", "\u7664", "\u7658", 
        "\u7646", "\u7647", "\u7649", "\u761E", "\u766D", "\u766E", "\u7669", "\u7672", "\u7AC7", "\u7AB6", 
        "\u8960", "\u8933", "\u895D", "\u8949", "\u8938", "\u8964", "\u76B8", "\u802C", "\u8079", "\u8075", 
        "\u9807", "\u980E", "\u980F", "\u9821", "\u981C", "\u9826", "\u9837", "\u984E", "\u9853", "\u9873", 
        "\u9862", "\u9859", "\u9865", "\u9870", "\u866F", "\u87E3", "\u8806", "\u8706", "\u8823", "\u87F6", 
        "\u86FA", "\u87EF", "\u8784", "\u8810", "\u87C8", "\u8811", "\u87BB", "\u8837", "\u7F4C", "\u7BE4", 
        "\u7B67", "\u7C69", "\u7BF3", "\u7B8F", "\u7C00", "\u7BCB", "\u7C5C", "\u7C1E", "\u7C2B", "\u7C23", 
        "\u7C6A", "\u7C5F", "\u8264", "\u826B", "\u88CA", "\u7FA5", "\u7CDD", "\u7E36", "\u9EA9", "\u8DB2", 
        "\u91C5", "\u91C3", "\u9E7A", "\u8E89", "\u8E4C", "\u8E92", "\u8E7A", "\u8E55", "\u8E9A", "\u8E8B", 
        "\u8E93", "\u8E91", "\u8EA1", "\u8E63", "\u8E95", "\u8EAA", "\u8EA6", "\u89F4", "\u89F6", "\u975A", 
        "\u9742", "\u973D", "\u9744", "\u9F54", "\u9F5F", "\u9F59", "\u9F60", "\u9F5C", "\u9F66", "\u9F6C", 
        "\u9F6A", "\u9F77", "\u9EFD", "\u9EFF", "\u9F09", "\u96CB", "\u8B8E", "\u947E", "\u93E8", "\u9B77", 
        "\u9B74", "\u9C4D", "\u9C78", "\u7A4C", "\u9B92", "\u9C5F", "\u9B90", "\u9B9A", "\u9BAA", "\u9B9E", 
        "\u9C6D", "\u9BAB", "\u9BD7", "\u9C58", "\u9BC1", "\u9C7A", "\u9C31", "\u9C39", "\u9C23", "\u9C37", 
        "\u9BC0", "\u9BCA", "\u9BC7", "\u9BFD", "\u9BD6", "\u9BEA", "\u9BEB", "\u9BE1", "\u9BE4", "\u9BE7", 
        "\u9BE2", "\u9BF0", "\u9BDB", "\u9BD4", "\u9C08", "\u9C77", "\u9C0D", "\u9C12", "\u9C09", "\u9C32", 
        "\u9C2D", "\u9C28", "\u9C25", "\u9C29", "\u9C33", "\u9C3E", "\u9C48", "\u9C3B", "\u9C56", "\u9C54", 
        "\u9C52", "\u9C67", "\u97C3", "\u97C9", "\u9DBB", "\u9ACF", "\u9AD6", "\u9AD5", "\u9B58", "\u9B4E", 
        "\u9957", "\u995C", "\u9B22", "\u9EBC", "\u9EF7", "\u9EF2", "\u9F34"
    };
    static Hashtable HT1 = null;
    static Hashtable HT2 = null;
    private static final String REGSTR_TOKEN = "REG_SZ";
    private static final String REGDWORD_TOKEN = "REG_DWORD";

}